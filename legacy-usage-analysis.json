{
  "functions": {
    "window.updateActiveList": {
      "count": 27,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 4027,
          "content": "window.updateActiveList = function() {"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 809,
          "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (!window.updateActiveList) {"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 810,
          "content": "window.updateActiveList = <span class=\"fstat-no\" title=\"function not covered\" >fu</span>nction() {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 1316,
          "content": "window.updateActiveList = function() {"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 730,
          "content": "expect(window.updateActiveList).toBeDefined();"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 746,
          "content": "window.updateActiveList();"
        },
        {
          "file": "bootstrap.js",
          "line": 795,
          "content": "window.updateActiveList();"
        },
        {
          "file": "bootstrap.js",
          "line": 928,
          "content": "try { window.updateActiveList(); } catch {}"
        },
        {
          "file": "polygons.js",
          "line": 187,
          "content": "window.updateActiveList();"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 126,
          "content": "if (!window.updateActiveList) {"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 127,
          "content": "window.updateActiveList = function() {"
        },
        {
          "file": "ES6IntegrationManager.test.js",
          "line": 73,
          "content": "expect(typeof window.updateActiveList).toBe('function');"
        },
        {
          "file": "activeList.js",
          "line": 82,
          "content": "window.updateActiveList = function(){"
        },
        {
          "file": "bootstrap.js",
          "line": 1022,
          "content": "window.updateActiveList();"
        },
        {
          "file": "bootstrap.js",
          "line": 1199,
          "content": "try { window.updateActiveList(); } catch {}"
        },
        {
          "file": "state.js",
          "line": 224,
          "content": "if (window.updateActiveList) {"
        },
        {
          "file": "state.js",
          "line": 226,
          "content": "window.updateActiveList();"
        },
        {
          "file": "migration-progress.md",
          "line": 26,
          "content": "- `window.updateActiveList`: 24 usages"
        },
        {
          "file": "migration-progress.md",
          "line": 59,
          "content": "3. `window.updateActiveList` (24 usages) \u001a `ActiveListManager`"
        },
        {
          "file": "setup.md",
          "line": 25,
          "content": "- **Active List Operations**: `window.updateActiveList`, `window.beginActiveListBulk`, `window.endActiveListBulk`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 57,
          "content": "window.updateActiveList()     \u001a activeListManager.updateActiveList()"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 134,
          "content": "2. `window.updateActiveList()` \u001a `activeListManager.updateActiveList()`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 123,
          "content": "'window.updateActiveList': 'activeListManager.updateActiveList',"
        },
        {
          "file": "README.md",
          "line": 110,
          "content": "- **Active List Operations**: `window.updateActiveList`, `window.beginActiveListBulk`, `window.endActiveListBulk`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 15,
          "content": "'window.updateActiveList',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 62,
          "content": "| `window.updateActiveList()` | `activeListManager.updateActiveList()` | UI migration | **HIGH** |"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 197,
          "content": "- Directly calls `window.setupCollapsible()`, `window.initSearch()`, `window.updateActiveList()`"
        }
      ]
    },
    "window.beginActiveListBulk": {
      "count": 21,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 4015,
          "content": "window.beginActiveListBulk = function() {"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 794,
          "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (!window.beginActiveListBulk) {"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 795,
          "content": "window.beginActiveListBulk = <span class=\"fstat-no\" title=\"function not covered\" >fu</span>nction() {"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1212,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.beginActiveListBulk = window.beginActiveListBulk || (<span class=\"fstat-no\" title=\"function not covered\" >()</span> =&gt; {});</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 1304,
          "content": "window.beginActiveListBulk = function() {"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 728,
          "content": "expect(window.beginActiveListBulk).toBeDefined();"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 740,
          "content": "window.beginActiveListBulk();"
        },
        {
          "file": "bootstrap.js",
          "line": 888,
          "content": "try { window.beginActiveListBulk(); } catch {}"
        },
        {
          "file": "polygons.js",
          "line": 239,
          "content": "window.beginActiveListBulk();"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 111,
          "content": "if (!window.beginActiveListBulk) {"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 112,
          "content": "window.beginActiveListBulk = function() {"
        },
        {
          "file": "ES6IntegrationManager.test.js",
          "line": 71,
          "content": "expect(typeof window.beginActiveListBulk).toBe('function');"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 267,
          "content": "window.beginActiveListBulk = window.beginActiveListBulk || (() => {});"
        },
        {
          "file": "activeList.js",
          "line": 11,
          "content": "window.beginActiveListBulk = function(){"
        },
        {
          "file": "bootstrap.js",
          "line": 1159,
          "content": "try { window.beginActiveListBulk(); } catch {}"
        },
        {
          "file": "setup.md",
          "line": 25,
          "content": "- **Active List Operations**: `window.updateActiveList`, `window.beginActiveListBulk`, `window.endActiveListBulk`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 58,
          "content": "window.beginActiveListBulk()  \u001a activeListManager.beginBulkOperation()"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 124,
          "content": "'window.beginActiveListBulk': 'activeListManager.beginBulkOperation',"
        },
        {
          "file": "README.md",
          "line": 110,
          "content": "- **Active List Operations**: `window.updateActiveList`, `window.beginActiveListBulk`, `window.endActiveListBulk`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 16,
          "content": "'window.beginActiveListBulk',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 63,
          "content": "| `window.beginActiveListBulk()` | `activeListManager.beginBulkOperation()` | UI migration | **HIGH** |"
        }
      ]
    },
    "window.endActiveListBulk": {
      "count": 21,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 4021,
          "content": "window.endActiveListBulk = function() {"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 803,
          "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (!window.endActiveListBulk) {"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 804,
          "content": "window.endActiveListBulk = <span class=\"fstat-no\" title=\"function not covered\" >fu</span>nction() {"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1213,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.endActiveListBulk = window.endActiveListBulk || (<span class=\"fstat-no\" title=\"function not covered\" >()</span> =&gt; {});</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 1310,
          "content": "window.endActiveListBulk = function() {"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 729,
          "content": "expect(window.endActiveListBulk).toBeDefined();"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 743,
          "content": "window.endActiveListBulk();"
        },
        {
          "file": "bootstrap.js",
          "line": 958,
          "content": "try { window.endActiveListBulk(); } catch {}"
        },
        {
          "file": "polygons.js",
          "line": 330,
          "content": "window.endActiveListBulk();"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 120,
          "content": "if (!window.endActiveListBulk) {"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 121,
          "content": "window.endActiveListBulk = function() {"
        },
        {
          "file": "ES6IntegrationManager.test.js",
          "line": 72,
          "content": "expect(typeof window.endActiveListBulk).toBe('function');"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 268,
          "content": "window.endActiveListBulk = window.endActiveListBulk || (() => {});"
        },
        {
          "file": "activeList.js",
          "line": 24,
          "content": "window.endActiveListBulk = function(){"
        },
        {
          "file": "bootstrap.js",
          "line": 1231,
          "content": "try { window.endActiveListBulk(); } catch {}"
        },
        {
          "file": "setup.md",
          "line": 25,
          "content": "- **Active List Operations**: `window.updateActiveList`, `window.beginActiveListBulk`, `window.endActiveListBulk`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 59,
          "content": "window.endActiveListBulk()    \u001a activeListManager.endBulkOperation()"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 125,
          "content": "'window.endActiveListBulk': 'activeListManager.endBulkOperation',"
        },
        {
          "file": "README.md",
          "line": 110,
          "content": "- **Active List Operations**: `window.updateActiveList`, `window.beginActiveListBulk`, `window.endActiveListBulk`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 17,
          "content": "'window.endActiveListBulk',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 64,
          "content": "| `window.endActiveListBulk()` | `activeListManager.endBulkOperation()` | UI migration | **HIGH** |"
        }
      ]
    },
    "window.createCheckbox": {
      "count": 9,
      "locations": [
        {
          "file": "polygons.js",
          "line": 156,
          "content": "const cb = window.createCheckbox(`${category}_${key}`, displayName, checked,"
        },
        {
          "file": "utils.js",
          "line": 142,
          "content": "window.createCheckbox = function(id,label,checked,onChange){"
        },
        {
          "file": "migration-progress.md",
          "line": 60,
          "content": "4. `window.createCheckbox` (1 usage) \u001a `UIManager`"
        },
        {
          "file": "setup.md",
          "line": 26,
          "content": "- **UI Functions**: `window.createCheckbox`, `window.setupCollapsible`, `window.setEmphasis`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 60,
          "content": "window.createCheckbox()       \u001a activeListManager.createCheckbox()"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 126,
          "content": "'window.createCheckbox': 'activeListManager.createCheckbox',"
        },
        {
          "file": "README.md",
          "line": 111,
          "content": "- **UI Functions**: `window.createCheckbox`, `window.setupCollapsible`, `window.setEmphasis`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 18,
          "content": "'window.createCheckbox',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 65,
          "content": "| `window.createCheckbox()` | `activeListManager.createCheckbox()` | UI migration | **HIGH** |"
        }
      ]
    },
    "window.setupCollapsible": {
      "count": 39,
      "locations": [
        {
          "file": "CollapsibleManager.js.html",
          "line": 1045,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >  window.setupCollapsible = <span class=\"fstat-no\" title=\"function not covered\" >(h</span>eaderId, listId, expanded) =&gt; {</span>"
        },
        {
          "file": "bootstrap.js",
          "line": 364,
          "content": "if (window.setupCollapsible) {"
        },
        {
          "file": "bootstrap.js",
          "line": 366,
          "content": "window.setupCollapsible('activeHeader', 'activeList', false);"
        },
        {
          "file": "bootstrap.js",
          "line": 367,
          "content": "window.setupCollapsible('showAllHeader', 'showAllList');"
        },
        {
          "file": "bootstrap.js",
          "line": 368,
          "content": "window.setupCollapsible('sesHeader', 'sesList');"
        },
        {
          "file": "bootstrap.js",
          "line": 369,
          "content": "window.setupCollapsible('lgaHeader', 'lgaList');"
        },
        {
          "file": "bootstrap.js",
          "line": 370,
          "content": "window.setupCollapsible('cfaHeader', 'cfaList');"
        },
        {
          "file": "bootstrap.js",
          "line": 371,
          "content": "window.setupCollapsible('policeHeader', 'policeList');"
        },
        {
          "file": "bootstrap.js",
          "line": 372,
          "content": "window.setupCollapsible('ambulanceHeader', 'ambulanceList');"
        },
        {
          "file": "bootstrap.js",
          "line": 373,
          "content": "window.setupCollapsible('frvHeader', 'frvList');"
        },
        {
          "file": "CollapsibleManager.js",
          "line": 324,
          "content": "window.setupCollapsible = (headerId, listId, expanded) => {"
        },
        {
          "file": "collapsible.js",
          "line": 5,
          "content": "window.setupCollapsible = function(headerId,listId,expanded=false){"
        },
        {
          "file": "bootstrap.js",
          "line": 531,
          "content": "exists: typeof window.setupCollapsible,"
        },
        {
          "file": "bootstrap.js",
          "line": 532,
          "content": "isFunction: typeof window.setupCollapsible === 'function',"
        },
        {
          "file": "bootstrap.js",
          "line": 533,
          "content": "value: window.setupCollapsible"
        },
        {
          "file": "bootstrap.js",
          "line": 537,
          "content": "if (window.setupCollapsible) {"
        },
        {
          "file": "bootstrap.js",
          "line": 541,
          "content": "window.setupCollapsible('activeHeader', 'activeList', false);"
        },
        {
          "file": "bootstrap.js",
          "line": 542,
          "content": "window.setupCollapsible('showAllHeader', 'showAllList');"
        },
        {
          "file": "bootstrap.js",
          "line": 543,
          "content": "window.setupCollapsible('sesHeader', 'sesList');"
        },
        {
          "file": "bootstrap.js",
          "line": 544,
          "content": "window.setupCollapsible('lgaHeader', 'lgaList');"
        },
        {
          "file": "bootstrap.js",
          "line": 545,
          "content": "window.setupCollapsible('cfaHeader', 'cfaList');"
        },
        {
          "file": "bootstrap.js",
          "line": 546,
          "content": "window.setupCollapsible('policeHeader', 'policeList');"
        },
        {
          "file": "bootstrap.js",
          "line": 547,
          "content": "window.setupCollapsible('ambulanceHeader', 'ambulanceList');"
        },
        {
          "file": "bootstrap.js",
          "line": 548,
          "content": "window.setupCollapsible('frvHeader', 'frvList');"
        },
        {
          "file": "app-bootstrap.md",
          "line": 320,
          "content": "window.setupCollapsible('sesHeader', 'sesList', false);"
        },
        {
          "file": "app-bootstrap.md",
          "line": 321,
          "content": "window.setupCollapsible('lgaHeader', 'lgaList', false);"
        },
        {
          "file": "app-bootstrap.md",
          "line": 334,
          "content": "window.setupCollapsible = function(headerId, listId, startCollapsed = false) {"
        },
        {
          "file": "migration-progress.md",
          "line": 24,
          "content": "- `window.setupCollapsible`: 45 usages"
        },
        {
          "file": "migration-progress.md",
          "line": 57,
          "content": "1. `window.setupCollapsible` (45 usages) \u001a `CollapsibleManager`"
        },
        {
          "file": "setup.md",
          "line": 26,
          "content": "- **UI Functions**: `window.createCheckbox`, `window.setupCollapsible`, `window.setEmphasis`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 67,
          "content": "window.setupCollapsible() \u001a collapsibleManager.setupCollapsible()"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 135,
          "content": "3. `window.setupCollapsible()` \u001a `collapsibleManager.setupCollapsible()`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 127,
          "content": "'window.setupCollapsible': 'collapsibleManager.setupCollapsible',"
        },
        {
          "file": "README.md",
          "line": 111,
          "content": "- **UI Functions**: `window.createCheckbox`, `window.setupCollapsible`, `window.setEmphasis`"
        },
        {
          "file": "terms-of-reference.md",
          "line": 172,
          "content": "window.setupCollapsible = function(headerId, listId) {"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 19,
          "content": "'window.setupCollapsible',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 66,
          "content": "| `window.setupCollapsible()` | `collapsibleManager.setupCollapsible()` | UI migration | **HIGH** |"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 197,
          "content": "- Directly calls `window.setupCollapsible()`, `window.initSearch()`, `window.updateActiveList()`"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 296,
          "content": "- Global `window.setupCollapsible()` function"
        }
      ]
    },
    "window.setEmphasis": {
      "count": 21,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 3537,
          "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (window.setEmphasis) {"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3539,
          "content": "window.setEmphasis(category, key, enabled, isPoint);"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 2300,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >    if (window.setEmphasis) {</span>"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 2301,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.setEmphasis(category, key, emphasised);</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 826,
          "content": "if (window.setEmphasis) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 828,
          "content": "window.setEmphasis(category, key, enabled, isPoint);"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 120,
          "content": "window.setEmphasis = jest.fn();"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 198,
          "content": "delete window.setEmphasis;"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 460,
          "content": "expect(window.setEmphasis).toHaveBeenCalledWith('ses', 'alpine_resorts', true, false);"
        },
        {
          "file": "ActiveListManager.js",
          "line": 697,
          "content": "if (window.setEmphasis) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 698,
          "content": "window.setEmphasis(category, key, emphasised);"
        },
        {
          "file": "emphasise.js",
          "line": 15,
          "content": "window.setEmphasis = function(category,key,on,isPoint){"
        },
        {
          "file": "migration-progress.md",
          "line": 61,
          "content": "5. `window.setEmphasis` (1 usage) \u001a `FeatureEnhancer`"
        },
        {
          "file": "setup.md",
          "line": 26,
          "content": "- **UI Functions**: `window.createCheckbox`, `window.setupCollapsible`, `window.setEmphasis`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 68,
          "content": "window.setEmphasis()      \u001a featureEnhancer.setEmphasis()"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 128,
          "content": "'window.setEmphasis': 'featureEnhancer.setEmphasis',"
        },
        {
          "file": "README.md",
          "line": 111,
          "content": "- **UI Functions**: `window.createCheckbox`, `window.setupCollapsible`, `window.setEmphasis`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 20,
          "content": "'window.setEmphasis',"
        },
        {
          "file": "activeList.real.test.js",
          "line": 136,
          "content": "window.setEmphasis = jest.fn();"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 67,
          "content": "| `window.setEmphasis()` | `featureEnhancer.setEmphasis()` | UI migration | **HIGH** |"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 513,
          "content": "- Global `window.setEmphasis()` function"
        }
      ]
    },
    "window.ensureLabel": {
      "count": 36,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 3580,
          "content": "<span class=\"missing-if-branch\" title=\"if path not taken\" >I</span>if (!window.ensureLabel) <span class=\"cstat-no\" title=\"statement not covered\" >return;</span>"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3593,
          "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 2093,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        if (window.ensureLabel) {</span>"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 2094,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >          window.ensureLabel(category, key, name, isPoint, layerOrMarker);</span>"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 2117,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      if (layerOrMarker &amp;&amp; window.ensureLabel) {</span>"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 2118,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.ensureLabel(category, key, name, isPoint, layerOrMarker);</span>"
        },
        {
          "file": "LabelManager.js.html",
          "line": 1819,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >  window.ensureLabel = <span class=\"fstat-no\" title=\"function not covered\" >(c</span>ategory, key, name, isPoint, layerOrMarker) =&gt; </span>"
        },
        {
          "file": "PolygonLoader.js.html",
          "line": 2163,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >    if (window.ensureLabel) {</span>"
        },
        {
          "file": "PolygonLoader.js.html",
          "line": 2164,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.ensureLabel(category, key, name, isPoint, layer);</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 869,
          "content": "if (!window.ensureLabel) return;"
        },
        {
          "file": "ActiveListManager.js",
          "line": 882,
          "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 121,
          "content": "window.ensureLabel = jest.fn();"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 199,
          "content": "delete window.ensureLabel;"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 472,
          "content": "expect(window.ensureLabel).toHaveBeenCalled();"
        },
        {
          "file": "polygons.js",
          "line": 172,
          "content": "window.ensureLabel(category, key, labelName, false, l);"
        },
        {
          "file": "polygons.js",
          "line": 205,
          "content": "window.ensureLabel(category, key, labelName, false, l);"
        },
        {
          "file": "polygons.js",
          "line": 290,
          "content": "window.ensureLabel(category, key, labelName, false, l);"
        },
        {
          "file": "ActiveListManager.js",
          "line": 490,
          "content": "if (window.ensureLabel) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 491,
          "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
        },
        {
          "file": "ActiveListManager.js",
          "line": 514,
          "content": "if (layerOrMarker && window.ensureLabel) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 515,
          "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
        },
        {
          "file": "LabelManager.js",
          "line": 582,
          "content": "window.ensureLabel = (category, key, name, isPoint, layerOrMarker) =>"
        },
        {
          "file": "PolygonLoader.js",
          "line": 648,
          "content": "if (window.ensureLabel) {"
        },
        {
          "file": "PolygonLoader.js",
          "line": 649,
          "content": "window.ensureLabel(category, key, name, isPoint, layer);"
        },
        {
          "file": "activeList.js",
          "line": 257,
          "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
        },
        {
          "file": "activeList.js",
          "line": 274,
          "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
        },
        {
          "file": "labels.js",
          "line": 139,
          "content": "window.ensureLabel = function(category,key,displayName,isPoint,layerOrMarker){"
        },
        {
          "file": "state.js",
          "line": 202,
          "content": "window.ensureLabel(category, key, labelName, isPoint, layer);"
        },
        {
          "file": "migration-progress.md",
          "line": 62,
          "content": "6. `window.ensureLabel` (2 usages) \u001a `LabelManager`"
        },
        {
          "file": "setup.md",
          "line": 27,
          "content": "- **Label Management**: `window.ensureLabel`, `window.removeLabel`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 69,
          "content": "window.ensureLabel()      \u001a labelManager.ensureLabel()"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 129,
          "content": "'window.ensureLabel': 'labelManager.ensureLabel',"
        },
        {
          "file": "README.md",
          "line": 112,
          "content": "- **Label Management**: `window.ensureLabel`, `window.removeLabel`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 21,
          "content": "'window.ensureLabel',"
        },
        {
          "file": "activeList.real.test.js",
          "line": 134,
          "content": "window.ensureLabel = jest.fn();"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 68,
          "content": "| `window.ensureLabel()` | `labelManager.ensureLabel()` | UI migration | **HIGH** |"
        }
      ]
    },
    "window.removeLabel": {
      "count": 31,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 3604,
          "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (window.removeLabel) {"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3605,
          "content": "window.removeLabel(category, key);"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 2097,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        if (window.removeLabel) {</span>"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 2098,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >          window.removeLabel(category, key);</span>"
        },
        {
          "file": "LabelManager.js.html",
          "line": 1821,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >  window.removeLabel = <span class=\"fstat-no\" title=\"function not covered\" >(c</span>ategory, key) =&gt; </span>"
        },
        {
          "file": "PolygonLoader.js.html",
          "line": 2169,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >    if (window.removeLabel) {</span>"
        },
        {
          "file": "PolygonLoader.js.html",
          "line": 2170,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.removeLabel(category, key);</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 893,
          "content": "if (window.removeLabel) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 894,
          "content": "window.removeLabel(category, key);"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 122,
          "content": "window.removeLabel = jest.fn();"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 200,
          "content": "delete window.removeLabel;"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 478,
          "content": "expect(window.removeLabel).toHaveBeenCalledWith('ses', 'alpine_resorts');"
        },
        {
          "file": "bootstrap.js",
          "line": 904,
          "content": "try { window.removeLabel(cat, key); } catch {}"
        },
        {
          "file": "bootstrap.js",
          "line": 966,
          "content": "try { window.removeLabel(cat, key); } catch {}"
        },
        {
          "file": "ActiveListManager.js",
          "line": 494,
          "content": "if (window.removeLabel) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 495,
          "content": "window.removeLabel(category, key);"
        },
        {
          "file": "LabelManager.js",
          "line": 584,
          "content": "window.removeLabel = (category, key) =>"
        },
        {
          "file": "PolygonLoader.js",
          "line": 654,
          "content": "if (window.removeLabel) {"
        },
        {
          "file": "PolygonLoader.js",
          "line": 655,
          "content": "window.removeLabel(category, key);"
        },
        {
          "file": "activeList.js",
          "line": 259,
          "content": "window.removeLabel(category, key);"
        },
        {
          "file": "bootstrap.js",
          "line": 1175,
          "content": "try { window.removeLabel(cat, key); } catch {}"
        },
        {
          "file": "bootstrap.js",
          "line": 1239,
          "content": "try { window.removeLabel(cat, key); } catch {}"
        },
        {
          "file": "labels.js",
          "line": 196,
          "content": "window.removeLabel = function(category,key){"
        },
        {
          "file": "migration-progress.md",
          "line": 63,
          "content": "7. `window.removeLabel` (1 usage) \u001a `LabelManager`"
        },
        {
          "file": "setup.md",
          "line": 27,
          "content": "- **Label Management**: `window.ensureLabel`, `window.removeLabel`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 70,
          "content": "window.removeLabel()      \u001a labelManager.removeLabel()"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 130,
          "content": "'window.removeLabel': 'labelManager.removeLabel',"
        },
        {
          "file": "README.md",
          "line": 112,
          "content": "- **Label Management**: `window.ensureLabel`, `window.removeLabel`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 22,
          "content": "'window.removeLabel',"
        },
        {
          "file": "activeList.real.test.js",
          "line": 135,
          "content": "window.removeLabel = jest.fn();"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 69,
          "content": "| `window.removeLabel()` | `labelManager.removeLabel()` | UI migration | **HIGH** |"
        }
      ]
    },
    "window.toggleAll": {
      "count": 4,
      "locations": [
        {
          "file": "variable-migration-quick-reference.md",
          "line": 61,
          "content": "window.toggleAll()            \u001a activeListManager.toggleAll()"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 131,
          "content": "'window.toggleAll': 'activeListManager.toggleAll',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 23,
          "content": "'window.toggleAll',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 70,
          "content": "| `window.toggleAll()` | `activeListManager.toggleAll()` | UI migration | **HIGH** |"
        }
      ]
    },
    "window.BulkOperationManager": {
      "count": 50,
      "locations": [
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 775,
          "content": "// Create window.BulkOperationManager compatibility"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 776,
          "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (window.BulkOperationManager) {"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 777,
          "content": "this.legacyFunctions.set('BulkOperationManager', window.BulkOperationManager);"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 796,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        if (window.BulkOperationManager) {</span>"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 797,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >          window.BulkOperationManager.markActiveListUpdatePending();</span>"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 825,
          "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (window.BulkOperationManager) {"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 826,
          "content": "return window.BulkOperationManager.begin('legacy');"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 835,
          "content": "if (window.BulkOperationManager) {"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 836,
          "content": "window.BulkOperationManager.end();"
        },
        {
          "file": "ES6IntegrationManager.js.html",
          "line": 870,
          "content": "<span class=\"missing-if-branch\" title=\"if path not taken\" >I</span>if (!window.BulkOperationManager) {"
        },
        {
          "file": "LegacyCompatibility.js.html",
          "line": 860,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      return window.BulkOperationManager ? window.BulkOperationManager.begin('legacy') : false;</span>"
        },
        {
          "file": "LegacyCompatibility.js.html",
          "line": 864,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      if (window.BulkOperationManager) {</span>"
        },
        {
          "file": "LegacyCompatibility.js.html",
          "line": 865,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.BulkOperationManager.end();</span>"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1205,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.BulkOperationManager = window.BulkOperationManager || {</span>"
        },
        {
          "file": "polygons.js",
          "line": 235,
          "content": "const bulkStarted = window.BulkOperationManager.begin('toggleAll', items.length);"
        },
        {
          "file": "polygons.js",
          "line": 287,
          "content": "if (window.BulkOperationManager.isActive()) {"
        },
        {
          "file": "polygons.js",
          "line": 288,
          "content": "window.BulkOperationManager.addPendingLabel({category, key, labelName, isPoint: false, layer: l});"
        },
        {
          "file": "polygons.js",
          "line": 331,
          "content": "window.BulkOperationManager.end(); // This will handle labels and active list updates"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 92,
          "content": "// Create window.BulkOperationManager compatibility"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 93,
          "content": "if (window.BulkOperationManager) {"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 94,
          "content": "this.legacyFunctions.set('BulkOperationManager', window.BulkOperationManager);"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 113,
          "content": "if (window.BulkOperationManager) {"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 114,
          "content": "window.BulkOperationManager.markActiveListUpdatePending();"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 142,
          "content": "if (window.BulkOperationManager) {"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 143,
          "content": "return window.BulkOperationManager.begin('legacy');"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 152,
          "content": "if (window.BulkOperationManager) {"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 153,
          "content": "window.BulkOperationManager.end();"
        },
        {
          "file": "ES6IntegrationManager.js",
          "line": 187,
          "content": "if (!window.BulkOperationManager) {"
        },
        {
          "file": "ES6IntegrationManager.test.js",
          "line": 88,
          "content": "expect(window.BulkOperationManager.begin).toHaveBeenCalledWith('legacy');"
        },
        {
          "file": "ES6IntegrationManager.test.js",
          "line": 91,
          "content": "expect(window.BulkOperationManager.end).toHaveBeenCalled();"
        },
        {
          "file": "LegacyCompatibility.js",
          "line": 145,
          "content": "return window.BulkOperationManager ? window.BulkOperationManager.begin('legacy') : false;"
        },
        {
          "file": "LegacyCompatibility.js",
          "line": 149,
          "content": "if (window.BulkOperationManager) {"
        },
        {
          "file": "LegacyCompatibility.js",
          "line": 150,
          "content": "window.BulkOperationManager.end();"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 260,
          "content": "window.BulkOperationManager = window.BulkOperationManager || {"
        },
        {
          "file": "activeList.js",
          "line": 13,
          "content": "if (window.BulkOperationManager && window.BulkOperationManager.isActive()) {"
        },
        {
          "file": "activeList.js",
          "line": 17,
          "content": "window.BulkOperationManager.markActiveListUpdatePending();"
        },
        {
          "file": "activeList.js",
          "line": 31,
          "content": "if (window.BulkOperationManager && window.BulkOperationManager.isActive()) {"
        },
        {
          "file": "state.js",
          "line": 42,
          "content": "window.BulkOperationManager = {"
        },
        {
          "file": "state.js",
          "line": 249,
          "content": "return window.BulkOperationManager.begin('legacy');"
        },
        {
          "file": "state.js",
          "line": 253,
          "content": "window.BulkOperationManager.end();"
        },
        {
          "file": "migration-progress.md",
          "line": 25,
          "content": "- `window.BulkOperationManager`: 42 usages"
        },
        {
          "file": "migration-progress.md",
          "line": 58,
          "content": "2. `window.BulkOperationManager` (42 usages) \u001a `BulkOperationManager` ES6 module"
        },
        {
          "file": "setup.md",
          "line": 28,
          "content": "- **Bulk Operations**: `window.BulkOperationManager`, `window.isBulkOperation`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 35,
          "content": "window.BulkOperationManager \u001a stateManager.bulkOperation"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 133,
          "content": "1. `window.BulkOperationManager` \u001a `stateManager.bulkOperation`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 50,
          "content": "| `window.BulkOperationManager` | Bulk operation coordination | `stateManager.bulkOperation` | State management migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 112,
          "content": "'window.BulkOperationManager': 'stateManager.bulkOperation',"
        },
        {
          "file": "README.md",
          "line": 113,
          "content": "- **Bulk Operations**: `window.BulkOperationManager`, `window.isBulkOperation`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 24,
          "content": "'window.BulkOperationManager'"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 46,
          "content": "| `window.BulkOperationManager` | `stateManager.bulkOperation` | State management migration | **CRITICAL** |"
        }
      ]
    }
  },
  "globals": {
    "window.featureLayers": {
      "count": 63,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 3238,
          "content": "if (!window.namesByCategory?.[category] || !window.featureLayers?.[category]) {"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3321,
          "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (meta?.type === 'polygon' &amp;&amp; window.featureLayers?.[category]?.[key]) {"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3322,
          "content": "const layer = window.featureLayers[category][key][0];"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3587,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      layerOrMarker = window.featureLayers?.[category]?.[key];</span>"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3589,
          "content": "layerOrMarker = window.featureLayers?.[category]?.[key]?.[0];"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1192,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.featureLayers = window.featureLayers || {};</span>"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1229,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.featureLayers = featureLayers;</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 527,
          "content": "if (!window.namesByCategory?.[category] || !window.featureLayers?.[category]) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 610,
          "content": "if (meta?.type === 'polygon' && window.featureLayers?.[category]?.[key]) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 611,
          "content": "const layer = window.featureLayers[category][key][0];"
        },
        {
          "file": "ActiveListManager.js",
          "line": 876,
          "content": "layerOrMarker = window.featureLayers?.[category]?.[key];"
        },
        {
          "file": "ActiveListManager.js",
          "line": 878,
          "content": "layerOrMarker = window.featureLayers?.[category]?.[key]?.[0];"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 196,
          "content": "delete window.featureLayers;"
        },
        {
          "file": "polygons.js",
          "line": 86,
          "content": "if (window.featureLayers[category][key]) {"
        },
        {
          "file": "polygons.js",
          "line": 87,
          "content": "window.featureLayers[category][key].push(feature);"
        },
        {
          "file": "polygons.js",
          "line": 89,
          "content": "window.featureLayers[category][key] = [feature];"
        },
        {
          "file": "polygons.js",
          "line": 111,
          "content": "Object.keys(window.featureLayers[category]).forEach(key => {"
        },
        {
          "file": "polygons.js",
          "line": 112,
          "content": "window.featureLayers[category][key] = window.featureLayers[category][key].map(feature => {"
        },
        {
          "file": "polygons.js",
          "line": 127,
          "content": "window.namesByCategory[category] = Object.keys(window.featureLayers[category])"
        },
        {
          "file": "polygons.js",
          "line": 137,
          "content": "Object.keys(window.featureLayers[category]).forEach(k => {"
        },
        {
          "file": "polygons.js",
          "line": 159,
          "content": "window.featureLayers[category][key].forEach(l => {"
        },
        {
          "file": "polygons.js",
          "line": 194,
          "content": "window.featureLayers[category][key].forEach(l => {"
        },
        {
          "file": "polygons.js",
          "line": 278,
          "content": "window.featureLayers[category][key].forEach(l => {"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 247,
          "content": "window.featureLayers = window.featureLayers || {};"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 284,
          "content": "window.featureLayers = featureLayers;"
        },
        {
          "file": "state.js",
          "line": 15,
          "content": "window.featureLayers = { ses:{}, lga:{}, cfa:{}, ambulance:{}, police:{}, frv:{} };"
        },
        {
          "file": "state.js",
          "line": 199,
          "content": "if (window.featureLayers[category][key] &&"
        },
        {
          "file": "state.js",
          "line": 200,
          "content": "window.featureLayers[category][key].some(l => l._map)) {"
        },
        {
          "file": "data-flow.md",
          "line": 32,
          "content": "window.featureLayers = {"
        },
        {
          "file": "data-flow.md",
          "line": 155,
          "content": "window.featureLayers.ses[feature.key] = feature.layer;"
        },
        {
          "file": "data-flow.md",
          "line": 290,
          "content": "window.featureLayers.ses[key] = createLeafletLayer(feature);"
        },
        {
          "file": "data-flow.md",
          "line": 417,
          "content": "Object.entries(window.featureLayers).forEach(([category, layers]) => {"
        },
        {
          "file": "data-flow.md",
          "line": 422,
          "content": "delete window.featureLayers[category][key];"
        },
        {
          "file": "data-flow.md",
          "line": 614,
          "content": "if (!window.featureLayers[category][key]) {"
        },
        {
          "file": "data-flow.md",
          "line": 654,
          "content": "Object.entries(window.featureLayers).forEach(([category, layers]) => {"
        },
        {
          "file": "data-flow.md",
          "line": 767,
          "content": "featureLayers: window.featureLayers,"
        },
        {
          "file": "data-flow.md",
          "line": 775,
          "content": "layers: Object.keys(window.featureLayers.ses),"
        },
        {
          "file": "data-flow.md",
          "line": 789,
          "content": "Object.entries(window.featureLayers).forEach(([category, layers]) => {"
        },
        {
          "file": "data-flow.md",
          "line": 947,
          "content": "window.featureLayers.ses[key] = layer; // Add layer"
        },
        {
          "file": "data-flow.md",
          "line": 976,
          "content": "console.log(window.featureLayers);"
        },
        {
          "file": "data-flow.md",
          "line": 1076,
          "content": "Object.entries(window.featureLayers).forEach(([category, layers]) => {"
        },
        {
          "file": "data-flow.md",
          "line": 1096,
          "content": "const layerKeys = Object.keys(window.featureLayers[category] || {});"
        },
        {
          "file": "data-loading.md",
          "line": 495,
          "content": "window.featureLayers[category].push(layer);"
        },
        {
          "file": "data-loading.md",
          "line": 523,
          "content": "if (!window.featureLayers[category]) {"
        },
        {
          "file": "data-loading.md",
          "line": 524,
          "content": "window.featureLayers[category] = [];"
        },
        {
          "file": "data-loading.md",
          "line": 528,
          "content": "window.featureLayers[category].push(...layers);"
        },
        {
          "file": "migration-progress.md",
          "line": 28,
          "content": "- `window.featureLayers`: 57 usages"
        },
        {
          "file": "migration-progress.md",
          "line": 76,
          "content": "1. `window.featureLayers` (57 usages) \u001a `LayerManager` state"
        },
        {
          "file": "setup.md",
          "line": 24,
          "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 12,
          "content": "window.featureLayers     \u001a stateManager.get('featureLayers')"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 122,
          "content": "1. `window.featureLayers` \u001a `stateManager.get('featureLayers')`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 20,
          "content": "| `window.featureLayers` | Map layers by category | `stateManager.get('featureLayers')` | Direct state migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 88,
          "content": "'window.featureLayers': 'stateManager.get(\"featureLayers\")',"
        },
        {
          "file": "README.md",
          "line": 109,
          "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 28,
          "content": "'window.featureLayers',"
        },
        {
          "file": "activeList.real.test.js",
          "line": 111,
          "content": "global.featureLayers = window.featureLayers;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 124,
          "content": "window.featureLayers = { ses: {}, lga: {}, cfa: {}, ambulance: {}, police: {}, frv: {} };"
        },
        {
          "file": "activeList.real.test.js",
          "line": 141,
          "content": "global.featureLayers = window.featureLayers;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 372,
          "content": "window.featureLayers.ses = { ballarat_city: [mockLayer] };"
        },
        {
          "file": "map-integration.real.test.js",
          "line": 82,
          "content": "window.featureLayers = { ses: {}, lga: {}, cfa: {} };"
        },
        {
          "file": "map-integration.test.js",
          "line": 141,
          "content": "window.featureLayers = {"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 25,
          "content": "| `window.featureLayers` | `stateManager.get('featureLayers')` | Direct state migration | **CRITICAL** |"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 236,
          "content": "- Mixed legacy `window.featureLayers` with modern state patterns"
        }
      ]
    },
    "window.namesByCategory": {
      "count": 66,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 2997,
          "content": "if (!window.namesByCategory?.[category] || !window.nameToKey?.[category]) {"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3007,
          "content": "window.namesByCategory[category].forEach(name =&gt; {"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3238,
          "content": "if (!window.namesByCategory?.[category] || !window.featureLayers?.[category]) {"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3245,
          "content": "window.namesByCategory[category].forEach(name =&gt; {"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3919,
          "content": "<span class=\"missing-if-branch\" title=\"if path not taken\" >I</span>if (!window.namesByCategory?.[category]) <span class=\"cstat-no\" title=\"statement not covered\" >return;</span>"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3977,
          "content": "if (!window.namesByCategory?.[category]) return;"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3979,
          "content": "window.namesByCategory[category].forEach(name =&gt; {"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1669,
          "content": "if (window.namesByCategory &amp;&amp; window.nameToKey) {"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1693,
          "content": "if (!window.namesByCategory || !window.nameToKey) {"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1698,
          "content": "Object.entries(window.namesByCategory).forEach(([category, names]) =&gt; {"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1193,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.namesByCategory = window.namesByCategory || {};</span>"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1235,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.namesByCategory = namesByCategory;</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1005,
          "content": "const namesByCategory = <span class=\"cstat-no\" title=\"statement not covered\" >window.namesByCategory || {};</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1170,
          "content": "const namesByCategory = <span class=\"cstat-no\" title=\"statement not covered\" >window.namesByCategory || {};</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 286,
          "content": "if (!window.namesByCategory?.[category] || !window.nameToKey?.[category]) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 296,
          "content": "window.namesByCategory[category].forEach(name => {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 527,
          "content": "if (!window.namesByCategory?.[category] || !window.featureLayers?.[category]) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 534,
          "content": "window.namesByCategory[category].forEach(name => {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 1208,
          "content": "if (!window.namesByCategory?.[category]) return;"
        },
        {
          "file": "ActiveListManager.js",
          "line": 1266,
          "content": "if (!window.namesByCategory?.[category]) return;"
        },
        {
          "file": "ActiveListManager.js",
          "line": 1268,
          "content": "window.namesByCategory[category].forEach(name => {"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 191,
          "content": "delete window.namesByCategory;"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 751,
          "content": "delete window.namesByCategory;"
        },
        {
          "file": "SearchManager.js",
          "line": 212,
          "content": "if (window.namesByCategory && window.nameToKey) {"
        },
        {
          "file": "SearchManager.js",
          "line": 236,
          "content": "if (!window.namesByCategory || !window.nameToKey) {"
        },
        {
          "file": "SearchManager.js",
          "line": 241,
          "content": "Object.entries(window.namesByCategory).forEach(([category, names]) => {"
        },
        {
          "file": "SearchManager.test.js",
          "line": 161,
          "content": "delete window.namesByCategory;"
        },
        {
          "file": "SearchManager.test.js",
          "line": 535,
          "content": "delete window.namesByCategory;"
        },
        {
          "file": "polygons.js",
          "line": 127,
          "content": "window.namesByCategory[category] = Object.keys(window.featureLayers[category])"
        },
        {
          "file": "polygons.js",
          "line": 147,
          "content": "window.namesByCategory[category].forEach(displayName => {"
        },
        {
          "file": "polygons.js",
          "line": 228,
          "content": "const items = window.namesByCategory[category];"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 248,
          "content": "window.namesByCategory = window.namesByCategory || {};"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 290,
          "content": "window.namesByCategory = namesByCategory;"
        },
        {
          "file": "SearchManager.js",
          "line": 150,
          "content": "const namesByCategory = window.namesByCategory || {};"
        },
        {
          "file": "SearchManager.js",
          "line": 315,
          "content": "const namesByCategory = window.namesByCategory || {};"
        },
        {
          "file": "state.js",
          "line": 17,
          "content": "window.namesByCategory = { ses:[], lga:[], cfa:[], ambulance:[], police:[], frv:[] };"
        },
        {
          "file": "data-flow.md",
          "line": 46,
          "content": "window.namesByCategory = {"
        },
        {
          "file": "data-flow.md",
          "line": 156,
          "content": "window.namesByCategory.ses.push(feature.name);"
        },
        {
          "file": "data-flow.md",
          "line": 291,
          "content": "window.namesByCategory.ses.push(name);"
        },
        {
          "file": "data-flow.md",
          "line": 428,
          "content": "Object.entries(window.namesByCategory).forEach(([category, names]) => {"
        },
        {
          "file": "data-flow.md",
          "line": 433,
          "content": "const index = window.namesByCategory[category].indexOf(name);"
        },
        {
          "file": "data-flow.md",
          "line": 435,
          "content": "window.namesByCategory[category].splice(index, 1);"
        },
        {
          "file": "data-flow.md",
          "line": 768,
          "content": "namesByCategory: window.namesByCategory,"
        },
        {
          "file": "data-flow.md",
          "line": 776,
          "content": "names: window.namesByCategory.ses,"
        },
        {
          "file": "data-flow.md",
          "line": 798,
          "content": "Object.entries(window.namesByCategory).forEach(([category, names]) => {"
        },
        {
          "file": "data-flow.md",
          "line": 949,
          "content": "window.namesByCategory.ses.push(name); // Add name"
        },
        {
          "file": "data-loading.md",
          "line": 506,
          "content": "window.namesByCategory[category] = features.map(f =>"
        },
        {
          "file": "migration-progress.md",
          "line": 30,
          "content": "- `window.namesByCategory`: 42 usages"
        },
        {
          "file": "migration-progress.md",
          "line": 78,
          "content": "3. `window.namesByCategory` (42 usages) \u001a `StateManager` state"
        },
        {
          "file": "setup.md",
          "line": 24,
          "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 13,
          "content": "window.namesByCategory   \u001a stateManager.get('namesByCategory')"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 123,
          "content": "2. `window.namesByCategory` \u001a `stateManager.get('namesByCategory')`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 21,
          "content": "| `window.namesByCategory` | Category name arrays | `stateManager.get('namesByCategory')` | Direct state migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 89,
          "content": "'window.namesByCategory': 'stateManager.get(\"namesByCategory\")',"
        },
        {
          "file": "README.md",
          "line": 109,
          "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 29,
          "content": "'window.namesByCategory',"
        },
        {
          "file": "activeList.real.test.js",
          "line": 109,
          "content": "global.namesByCategory = window.namesByCategory;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 122,
          "content": "window.namesByCategory = { ses: [], lga: [], cfa: [], ambulance: [], police: [], frv: [] };"
        },
        {
          "file": "activeList.real.test.js",
          "line": 139,
          "content": "global.namesByCategory = window.namesByCategory;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 239,
          "content": "window.namesByCategory.ses = ['Ballarat City', 'Geelong'];"
        },
        {
          "file": "activeList.real.test.js",
          "line": 269,
          "content": "window.namesByCategory.ses = ['Ballarat City'];"
        },
        {
          "file": "activeList.real.test.js",
          "line": 370,
          "content": "window.namesByCategory.ses = ['Ballarat City'];"
        },
        {
          "file": "activeList.real.test.js",
          "line": 405,
          "content": "window.namesByCategory.ses = ['Ballarat City'];"
        },
        {
          "file": "map-integration.real.test.js",
          "line": 83,
          "content": "window.namesByCategory = { ses: [], lga: [], cfa: [] };"
        },
        {
          "file": "map-integration.test.js",
          "line": 144,
          "content": "window.namesByCategory = {"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 26,
          "content": "| `window.namesByCategory` | `stateManager.get('namesByCategory')` | Direct state migration | **CRITICAL** |"
        }
      ]
    },
    "window.nameToKey": {
      "count": 68,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 2997,
          "content": "if (!window.namesByCategory?.[category] || !window.nameToKey?.[category]) {"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3008,
          "content": "const key = window.nameToKey[category][name];"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3246,
          "content": "const key = window.nameToKey[category][name];"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3922,
          "content": "const name = Object.keys(window.nameToKey[category] || <span class=\"branch-1 cbranch-no\" title=\"branch not covered\" >{})</span>.find("
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3923,
          "content": "n =&gt; window.nameToKey[category][n] === key"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3980,
          "content": "const key = window.nameToKey[category][name];"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1669,
          "content": "if (window.namesByCategory &amp;&amp; window.nameToKey) {"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1693,
          "content": "if (!window.namesByCategory || !window.nameToKey) {"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1705,
          "content": "let key = window.nameToKey[category]?.[name];"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1709,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >          for (const k in window.nameToKey[category] || {}) {</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1711,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >              key = window.nameToKey[category][k];</span>"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1194,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.nameToKey = window.nameToKey || {};</span>"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1241,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.nameToKey = nameToKey;</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1006,
          "content": "const nameToKey = <span class=\"cstat-no\" title=\"statement not covered\" >window.nameToKey || {};</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1171,
          "content": "const nameToKey = <span class=\"cstat-no\" title=\"statement not covered\" >window.nameToKey || {};</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 286,
          "content": "if (!window.namesByCategory?.[category] || !window.nameToKey?.[category]) {"
        },
        {
          "file": "ActiveListManager.js",
          "line": 297,
          "content": "const key = window.nameToKey[category][name];"
        },
        {
          "file": "ActiveListManager.js",
          "line": 535,
          "content": "const key = window.nameToKey[category][name];"
        },
        {
          "file": "ActiveListManager.js",
          "line": 1211,
          "content": "const name = Object.keys(window.nameToKey[category] || {}).find("
        },
        {
          "file": "ActiveListManager.js",
          "line": 1212,
          "content": "n => window.nameToKey[category][n] === key"
        },
        {
          "file": "ActiveListManager.js",
          "line": 1269,
          "content": "const key = window.nameToKey[category][name];"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 192,
          "content": "delete window.nameToKey;"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 752,
          "content": "delete window.nameToKey;"
        },
        {
          "file": "SearchManager.js",
          "line": 212,
          "content": "if (window.namesByCategory && window.nameToKey) {"
        },
        {
          "file": "SearchManager.js",
          "line": 236,
          "content": "if (!window.namesByCategory || !window.nameToKey) {"
        },
        {
          "file": "SearchManager.js",
          "line": 248,
          "content": "let key = window.nameToKey[category]?.[name];"
        },
        {
          "file": "SearchManager.js",
          "line": 252,
          "content": "for (const k in window.nameToKey[category] || {}) {"
        },
        {
          "file": "SearchManager.js",
          "line": 254,
          "content": "key = window.nameToKey[category][k];"
        },
        {
          "file": "SearchManager.test.js",
          "line": 162,
          "content": "delete window.nameToKey;"
        },
        {
          "file": "SearchManager.test.js",
          "line": 536,
          "content": "delete window.nameToKey;"
        },
        {
          "file": "polygons.js",
          "line": 136,
          "content": "window.nameToKey[category] = {};"
        },
        {
          "file": "polygons.js",
          "line": 141,
          "content": "window.nameToKey[category][display] = k;"
        },
        {
          "file": "polygons.js",
          "line": 148,
          "content": "const key = window.nameToKey[category][displayName];"
        },
        {
          "file": "polygons.js",
          "line": 258,
          "content": "const key = window.nameToKey[category][n];"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 249,
          "content": "window.nameToKey = window.nameToKey || {};"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 296,
          "content": "window.nameToKey = nameToKey;"
        },
        {
          "file": "SearchManager.js",
          "line": 151,
          "content": "const nameToKey = window.nameToKey || {};"
        },
        {
          "file": "SearchManager.js",
          "line": 316,
          "content": "const nameToKey = window.nameToKey || {};"
        },
        {
          "file": "state.js",
          "line": 19,
          "content": "window.nameToKey = { ses:{}, lga:{}, cfa:{}, ambulance:{}, police:{}, frv:{} };"
        },
        {
          "file": "data-flow.md",
          "line": 54,
          "content": "window.nameToKey = {"
        },
        {
          "file": "data-flow.md",
          "line": 157,
          "content": "window.nameToKey.ses[feature.name] = feature.key;"
        },
        {
          "file": "data-flow.md",
          "line": 292,
          "content": "window.nameToKey.ses[name] = key;"
        },
        {
          "file": "data-flow.md",
          "line": 419,
          "content": "if (!window.nameToKey[category][key]) {"
        },
        {
          "file": "data-flow.md",
          "line": 430,
          "content": "if (!window.nameToKey[category][name]) {"
        },
        {
          "file": "data-flow.md",
          "line": 791,
          "content": "if (!window.nameToKey[category][key]) {"
        },
        {
          "file": "data-flow.md",
          "line": 800,
          "content": "if (!window.nameToKey[category][name]) {"
        },
        {
          "file": "data-flow.md",
          "line": 1078,
          "content": "const nameKeys = Object.keys(window.nameToKey[category] || {});"
        },
        {
          "file": "data-loading.md",
          "line": 511,
          "content": "window.nameToKey[category] = {};"
        },
        {
          "file": "data-loading.md",
          "line": 515,
          "content": "window.nameToKey[category][name] = key;"
        },
        {
          "file": "migration-progress.md",
          "line": 29,
          "content": "- `window.nameToKey`: 45 usages"
        },
        {
          "file": "migration-progress.md",
          "line": 77,
          "content": "2. `window.nameToKey` (45 usages) \u001a `StateManager` state"
        },
        {
          "file": "setup.md",
          "line": 24,
          "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 14,
          "content": "window.nameToKey         \u001a stateManager.get('nameToKey')"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 124,
          "content": "3. `window.nameToKey` \u001a `stateManager.get('nameToKey')`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 22,
          "content": "| `window.nameToKey` | Name-to-key mapping | `stateManager.get('nameToKey')` | Direct state migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 90,
          "content": "'window.nameToKey': 'stateManager.get(\"nameToKey\")',"
        },
        {
          "file": "README.md",
          "line": 109,
          "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 30,
          "content": "'window.nameToKey',"
        },
        {
          "file": "activeList.real.test.js",
          "line": 110,
          "content": "global.nameToKey = window.nameToKey;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 123,
          "content": "window.nameToKey = { ses: {}, lga: {}, cfa: {}, ambulance: {}, police: {}, frv: {} };"
        },
        {
          "file": "activeList.real.test.js",
          "line": 140,
          "content": "global.nameToKey = window.nameToKey;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 240,
          "content": "window.nameToKey.ses = { 'Ballarat City': 'ballarat_city', 'Geelong': 'geelong' };"
        },
        {
          "file": "activeList.real.test.js",
          "line": 270,
          "content": "window.nameToKey.ses = { 'Ballarat City': 'ballarat_city' };"
        },
        {
          "file": "activeList.real.test.js",
          "line": 371,
          "content": "window.nameToKey.ses = { 'Ballarat City': 'ballarat_city' };"
        },
        {
          "file": "activeList.real.test.js",
          "line": 406,
          "content": "window.nameToKey.ses = { 'Ballarat City': 'ballarat_city' };"
        },
        {
          "file": "map-integration.real.test.js",
          "line": 84,
          "content": "window.nameToKey = { ses: {}, lga: {}, cfa: {} };"
        },
        {
          "file": "map-integration.test.js",
          "line": 147,
          "content": "window.nameToKey = {"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 27,
          "content": "| `window.nameToKey` | `stateManager.get('nameToKey')` | Direct state migration | **CRITICAL** |"
        }
      ]
    },
    "window.emphasised": {
      "count": 33,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 3436,
          "content": "checkbox.checked = !!(window.emphasised?.[category]?.[key]);"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1195,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.emphasised = window.emphasised || {};</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 725,
          "content": "checkbox.checked = !!(window.emphasised?.[category]?.[key]);"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 197,
          "content": "delete window.emphasised;"
        },
        {
          "file": "bootstrap.js",
          "line": 905,
          "content": "try { window.emphasised[cat][key] = false; } catch {}"
        },
        {
          "file": "bootstrap.js",
          "line": 967,
          "content": "try { window.emphasised[cat][key] = false; } catch {}"
        },
        {
          "file": "polygons.js",
          "line": 180,
          "content": "window.emphasised[category][key] = false;"
        },
        {
          "file": "polygons.js",
          "line": 298,
          "content": "if (window.emphasised?.[category]) {"
        },
        {
          "file": "polygons.js",
          "line": 299,
          "content": "window.emphasised[category][key] = false;"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 250,
          "content": "window.emphasised = window.emphasised || {};"
        },
        {
          "file": "bootstrap.js",
          "line": 1176,
          "content": "try { window.emphasised[cat][key] = false; } catch {}"
        },
        {
          "file": "bootstrap.js",
          "line": 1240,
          "content": "try { window.emphasised[cat][key] = false; } catch {}"
        },
        {
          "file": "state.js",
          "line": 21,
          "content": "window.emphasised = { ses:{}, lga:{}, cfa:{}, ambulance:{}, police:{}, frv:{} };"
        },
        {
          "file": "data-flow.md",
          "line": 65,
          "content": "window.emphasised = {"
        },
        {
          "file": "data-flow.md",
          "line": 252,
          "content": "window.emphasised[category][key] = true;"
        },
        {
          "file": "data-flow.md",
          "line": 255,
          "content": "window.emphasised[category][key] = false;"
        },
        {
          "file": "data-flow.md",
          "line": 675,
          "content": "emphasised: window.emphasised,"
        },
        {
          "file": "data-flow.md",
          "line": 702,
          "content": "window.emphasised = { ...window.emphasised, ...state.emphasised };"
        },
        {
          "file": "data-flow.md",
          "line": 769,
          "content": "emphasised: window.emphasised,"
        },
        {
          "file": "data-flow.md",
          "line": 777,
          "content": "emphasised: window.emphasised.ses,"
        },
        {
          "file": "data-flow.md",
          "line": 948,
          "content": "window.emphasised.ses[key] = true; // Emphasize feature"
        },
        {
          "file": "data-flow.md",
          "line": 977,
          "content": "console.log(window.emphasised);"
        },
        {
          "file": "data-flow.md",
          "line": 1094,
          "content": "Object.entries(window.emphasised).forEach(([category, emphasis]) => {"
        },
        {
          "file": "migration-progress.md",
          "line": 79,
          "content": "4. `window.emphasised` (24 usages) \u001a `StateManager` state"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 15,
          "content": "window.emphasised        \u001a stateManager.get('emphasised')"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 125,
          "content": "4. `window.emphasised` \u001a `stateManager.get('emphasised')`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 23,
          "content": "| `window.emphasised` | Emphasis state tracking | `stateManager.get('emphasised')` | Direct state migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 91,
          "content": "'window.emphasised': 'stateManager.get(\"emphasised\")',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 31,
          "content": "'window.emphasised',"
        },
        {
          "file": "activeList.real.test.js",
          "line": 114,
          "content": "global.emphasised = window.emphasised;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 125,
          "content": "window.emphasised = { ses: {}, lga: {}, cfa: {}, ambulance: {}, police: {}, frv: {} };"
        },
        {
          "file": "activeList.real.test.js",
          "line": 144,
          "content": "global.emphasised = window.emphasised;"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 28,
          "content": "| `window.emphasised` | `stateManager.get('emphasised')` | Direct state migration | **CRITICAL** |"
        }
      ]
    },
    "window.nameLabelMarkers": {
      "count": 22,
      "locations": [
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1196,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.nameLabelMarkers = window.nameLabelMarkers || {};</span>"
        },
        {
          "file": "bootstrap.js",
          "line": 902,
          "content": "const bucket = window.nameLabelMarkers?.[cat] || {};"
        },
        {
          "file": "bootstrap.js",
          "line": 964,
          "content": "const bucket = window.nameLabelMarkers?.[cat] || {};"
        },
        {
          "file": "polygons.js",
          "line": 181,
          "content": "if (window.nameLabelMarkers[category][key]) {"
        },
        {
          "file": "polygons.js",
          "line": 182,
          "content": "map.removeLayer(window.nameLabelMarkers[category][key]);"
        },
        {
          "file": "polygons.js",
          "line": 183,
          "content": "window.nameLabelMarkers[category][key] = null;"
        },
        {
          "file": "polygons.js",
          "line": 301,
          "content": "if (window.nameLabelMarkers?.[category]?.[key]) {"
        },
        {
          "file": "polygons.js",
          "line": 302,
          "content": "map.removeLayer(window.nameLabelMarkers[category][key]);"
        },
        {
          "file": "polygons.js",
          "line": 303,
          "content": "window.nameLabelMarkers[category][key] = null;"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 251,
          "content": "window.nameLabelMarkers = window.nameLabelMarkers || {};"
        },
        {
          "file": "bootstrap.js",
          "line": 1173,
          "content": "const bucket = window.nameLabelMarkers?.[cat] || {};"
        },
        {
          "file": "bootstrap.js",
          "line": 1237,
          "content": "const bucket = window.nameLabelMarkers?.[cat] || {};"
        },
        {
          "file": "state.js",
          "line": 23,
          "content": "window.nameLabelMarkers = { ses:{}, lga:{}, cfa:{}, ambulance:{}, police:{}, frv:{} };"
        },
        {
          "file": "data-flow.md",
          "line": 71,
          "content": "window.nameLabelMarkers = {"
        },
        {
          "file": "data-flow.md",
          "line": 612,
          "content": "Object.entries(window.nameLabelMarkers).forEach(([category, markers]) => {"
        },
        {
          "file": "data-flow.md",
          "line": 620,
          "content": "delete window.nameLabelMarkers[category][key];"
        },
        {
          "file": "migration-progress.md",
          "line": 80,
          "content": "5. `window.nameLabelMarkers` (19 usages) \u001a `LabelManager` state"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 16,
          "content": "window.nameLabelMarkers  \u001a stateManager.get('nameLabelMarkers')"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 24,
          "content": "| `window.nameLabelMarkers` | Label marker references | `stateManager.get('nameLabelMarkers')` | Direct state migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 92,
          "content": "'window.nameLabelMarkers': 'stateManager.get(\"nameLabelMarkers\")',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 32,
          "content": "'window.nameLabelMarkers',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 29,
          "content": "| `window.nameLabelMarkers` | `stateManager.get('nameLabelMarkers')` | Direct state migration | **CRITICAL** |"
        }
      ]
    },
    "window.activeListFilter": {
      "count": 14,
      "locations": [
        {
          "file": "StateManager.js.html",
          "line": 1089,
          "content": "this._state.activeListFilter = window.activeListFilter || '';"
        },
        {
          "file": "StateManager.js",
          "line": 136,
          "content": "this._state.activeListFilter = window.activeListFilter || '';"
        },
        {
          "file": "state.js",
          "line": 24,
          "content": "window.activeListFilter = '';"
        },
        {
          "file": "state.js",
          "line": 36,
          "content": "window.setActiveListFilter = function(v){ window.activeListFilter = v; };"
        },
        {
          "file": "data-flow.md",
          "line": 81,
          "content": "window.activeListFilter = ''; // Search filter text"
        },
        {
          "file": "data-flow.md",
          "line": 676,
          "content": "activeListFilter: window.activeListFilter,"
        },
        {
          "file": "data-flow.md",
          "line": 706,
          "content": "window.activeListFilter = state.activeListFilter;"
        },
        {
          "file": "data-flow.md",
          "line": 770,
          "content": "activeListFilter: window.activeListFilter,"
        },
        {
          "file": "migration-progress.md",
          "line": 81,
          "content": "6. `window.activeListFilter` (12 usages) \u001a `ActiveListManager` state"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 18,
          "content": "window.activeListFilter  \u001a stateManager.get('activeListFilter')"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 26,
          "content": "| `window.activeListFilter` | Search filter state | `stateManager.get('activeListFilter')` | Direct state migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 94,
          "content": "'window.activeListFilter': 'stateManager.get(\"activeListFilter\")',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 33,
          "content": "'window.activeListFilter',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 31,
          "content": "| `window.activeListFilter` | `stateManager.get('activeListFilter')` | Direct state migration | **CRITICAL** |"
        }
      ]
    },
    "window.isBulkOperation": {
      "count": 19,
      "locations": [
        {
          "file": "StateManager.js.html",
          "line": 1091,
          "content": "this._state.isBulkOperation = window.isBulkOperation || false;"
        },
        {
          "file": "polygons.js",
          "line": 168,
          "content": "if (window.isBulkOperation) {"
        },
        {
          "file": "polygons.js",
          "line": 201,
          "content": "if (window.isBulkOperation) {"
        },
        {
          "file": "StateManager.js",
          "line": 138,
          "content": "this._state.isBulkOperation = window.isBulkOperation || false;"
        },
        {
          "file": "state.js",
          "line": 30,
          "content": "window.isBulkOperation = false;"
        },
        {
          "file": "state.js",
          "line": 74,
          "content": "window.isBulkOperation = true;"
        },
        {
          "file": "state.js",
          "line": 114,
          "content": "window.isBulkOperation = false;"
        },
        {
          "file": "data-flow.md",
          "line": 82,
          "content": "window.isBulkOperation = false; // Bulk operation flag"
        },
        {
          "file": "data-flow.md",
          "line": 732,
          "content": "isBulkOperation: window.isBulkOperation,"
        },
        {
          "file": "data-flow.md",
          "line": 744,
          "content": "window.isBulkOperation = state.isBulkOperation;"
        },
        {
          "file": "data-flow.md",
          "line": 747,
          "content": "if (window.isBulkOperation && window.pendingLabels.length > 0) {"
        },
        {
          "file": "migration-progress.md",
          "line": 82,
          "content": "7. `window.isBulkOperation` (8 usages) \u001a `BulkOperationManager` state"
        },
        {
          "file": "setup.md",
          "line": 28,
          "content": "- **Bulk Operations**: `window.BulkOperationManager`, `window.isBulkOperation`"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 19,
          "content": "window.isBulkOperation   \u001a stateManager.get('isBulkOperation')"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 27,
          "content": "| `window.isBulkOperation` | Bulk operation flag | `stateManager.get('isBulkOperation')` | Direct state migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 95,
          "content": "'window.isBulkOperation': 'stateManager.get(\"isBulkOperation\")',"
        },
        {
          "file": "README.md",
          "line": 113,
          "content": "- **Bulk Operations**: `window.BulkOperationManager`, `window.isBulkOperation`"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 34,
          "content": "'window.isBulkOperation',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 32,
          "content": "| `window.isBulkOperation` | `stateManager.get('isBulkOperation')` | Direct state migration | **CRITICAL** |"
        }
      ]
    },
    "window.pendingLabels": {
      "count": 14,
      "locations": [
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1197,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.pendingLabels = window.pendingLabels || [];</span>"
        },
        {
          "file": "polygons.js",
          "line": 170,
          "content": "window.pendingLabels.push({category, key, labelName, isPoint: false, layer: l});"
        },
        {
          "file": "polygons.js",
          "line": 203,
          "content": "window.pendingLabels.push({category, key, labelName, isPoint: false, layer: l});"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 252,
          "content": "window.pendingLabels = window.pendingLabels || [];"
        },
        {
          "file": "state.js",
          "line": 28,
          "content": "window.pendingLabels = [];"
        },
        {
          "file": "data-flow.md",
          "line": 83,
          "content": "window.pendingLabels = []; // Deferred label creation"
        },
        {
          "file": "data-flow.md",
          "line": 733,
          "content": "pendingLabels: window.pendingLabels,"
        },
        {
          "file": "data-flow.md",
          "line": 745,
          "content": "window.pendingLabels = state.pendingLabels || [];"
        },
        {
          "file": "data-flow.md",
          "line": 747,
          "content": "if (window.isBulkOperation && window.pendingLabels.length > 0) {"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 17,
          "content": "window.pendingLabels     \u001a stateManager.get('pendingLabels')"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 25,
          "content": "| `window.pendingLabels` | Pending label queue | `stateManager.get('pendingLabels')` | Direct state migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 93,
          "content": "'window.pendingLabels': 'stateManager.get(\"pendingLabels\")',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 35,
          "content": "'window.pendingLabels',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 30,
          "content": "| `window.pendingLabels` | `stateManager.get('pendingLabels')` | Direct state migration | **CRITICAL** |"
        }
      ]
    },
    "window.outlineColors": {
      "count": 33,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 3396,
          "content": "const baseColor = window.outlineColors?.[category] || <span class=\"branch-1 cbranch-no\" title=\"branch not covered\" >'#333';</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1886,
          "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (window.outlineColors &amp;&amp; window.outlineColors[category]) {"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1887,
          "content": "const base = window.outlineColors[category];"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1201,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.outlineColors = window.outlineColors || {};</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1007,
          "content": "const outlineColors = <span class=\"cstat-no\" title=\"statement not covered\" >window.outlineColors || {};</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1064,
          "content": "const outlineColors = <span class=\"cstat-no\" title=\"statement not covered\" >window.outlineColors || {};</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 685,
          "content": "const baseColor = window.outlineColors?.[category] || '#333';"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 194,
          "content": "delete window.outlineColors;"
        },
        {
          "file": "SearchManager.js",
          "line": 429,
          "content": "if (window.outlineColors && window.outlineColors[category]) {"
        },
        {
          "file": "SearchManager.js",
          "line": 430,
          "content": "const base = window.outlineColors[category];"
        },
        {
          "file": "SearchManager.test.js",
          "line": 163,
          "content": "delete window.outlineColors;"
        },
        {
          "file": "bootstrap.js",
          "line": 718,
          "content": "window.outlineColors[cat] = style.color;"
        },
        {
          "file": "bootstrap.js",
          "line": 739,
          "content": "const base = window.outlineColors[cat];"
        },
        {
          "file": "polygons.js",
          "line": 8,
          "content": "const color = window.outlineColors.ses || '#FF9900';"
        },
        {
          "file": "polygons_old.js",
          "line": 8,
          "content": "const color = window.outlineColors.ses || '#FF9900';"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 256,
          "content": "window.outlineColors = window.outlineColors || {};"
        },
        {
          "file": "SearchManager.js",
          "line": 152,
          "content": "const outlineColors = window.outlineColors || {};"
        },
        {
          "file": "SearchManager.js",
          "line": 209,
          "content": "const outlineColors = window.outlineColors || {};"
        },
        {
          "file": "bootstrap.js",
          "line": 945,
          "content": "window.outlineColors[cat] = style.color;"
        },
        {
          "file": "bootstrap.js",
          "line": 966,
          "content": "const base = window.outlineColors[cat];"
        },
        {
          "file": "config.js",
          "line": 18,
          "content": "window.outlineColors = { ses:'#cc7a00', lga:'black', cfa:'#FF0000', ambulance:'#d32f2f', police:'#145088', frv:'#DC143C' };"
        },
        {
          "file": "endpoints.md",
          "line": 185,
          "content": "window.outlineColors = {"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 26,
          "content": "window.outlineColors       \u001a configurationManager.get('outlineColors')"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 129,
          "content": "2. `window.outlineColors` \u001a `configurationManager.get('outlineColors')`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 33,
          "content": "| `window.outlineColors` | Category outline colors | `configurationManager.get('outlineColors')` | Configuration migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 99,
          "content": "'window.outlineColors': 'configurationManager.get(\"outlineColors\")',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 36,
          "content": "'window.outlineColors',"
        },
        {
          "file": "activeList.real.test.js",
          "line": 113,
          "content": "global.outlineColors = window.outlineColors;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 133,
          "content": "window.outlineColors = { ses: '#FF9900', lga: '#4ECDC4', cfa: '#45B7D1' };"
        },
        {
          "file": "activeList.real.test.js",
          "line": 143,
          "content": "global.outlineColors = window.outlineColors;"
        },
        {
          "file": "map-integration.real.test.js",
          "line": 87,
          "content": "window.outlineColors = { ses: '#FF9900' };"
        },
        {
          "file": "map-integration.real.test.js",
          "line": 95,
          "content": "const color = window.outlineColors.ses || '#FF9900';"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 38,
          "content": "| `window.outlineColors` | `configurationManager.get('outlineColors')` | Configuration migration | **HIGH** |"
        }
      ]
    },
    "window.baseOpacities": {
      "count": 10,
      "locations": [
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1202,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.baseOpacities = window.baseOpacities || {};</span>"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 257,
          "content": "window.baseOpacities = window.baseOpacities || {};"
        },
        {
          "file": "config.js",
          "line": 19,
          "content": "window.baseOpacities = { ses:0.2, lga:0.1, cfa:0.1, frv:0.1 };"
        },
        {
          "file": "endpoints.md",
          "line": 195,
          "content": "window.baseOpacities = {"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 27,
          "content": "window.baseOpacities       \u001a configurationManager.get('baseOpacities')"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 130,
          "content": "3. `window.baseOpacities` \u001a `configurationManager.get('baseOpacities')`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 34,
          "content": "| `window.baseOpacities` | Base opacity values | `configurationManager.get('baseOpacities')` | Configuration migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 100,
          "content": "'window.baseOpacities': 'configurationManager.get(\"baseOpacities\")',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 37,
          "content": "'window.baseOpacities',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 39,
          "content": "| `window.baseOpacities` | `configurationManager.get('baseOpacities')` | Configuration migration | **HIGH** |"
        }
      ]
    },
    "window.labelColorAdjust": {
      "count": 19,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 3397,
          "content": "const factor = window.labelColorAdjust?.[category] ?? <span class=\"branch-1 cbranch-no\" title=\"branch not covered\" >1.0;</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1888,
          "content": "const factor = window.labelColorAdjust?.[category] ?? <span class=\"branch-1 cbranch-no\" title=\"branch not covered\" >1.0;</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1008,
          "content": "const labelColorAdjust = <span class=\"cstat-no\" title=\"statement not covered\" >window.labelColorAdjust || {};</span>"
        },
        {
          "file": "SearchManager.js.html",
          "line": 1065,
          "content": "const labelColorAdjust = <span class=\"cstat-no\" title=\"statement not covered\" >window.labelColorAdjust || {};</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 686,
          "content": "const factor = window.labelColorAdjust?.[category] ?? 1.0;"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 195,
          "content": "delete window.labelColorAdjust;"
        },
        {
          "file": "SearchManager.js",
          "line": 431,
          "content": "const factor = window.labelColorAdjust?.[category] ?? 1.0;"
        },
        {
          "file": "SearchManager.test.js",
          "line": 164,
          "content": "delete window.labelColorAdjust;"
        },
        {
          "file": "SearchManager.js",
          "line": 153,
          "content": "const labelColorAdjust = window.labelColorAdjust || {};"
        },
        {
          "file": "SearchManager.js",
          "line": 210,
          "content": "const labelColorAdjust = window.labelColorAdjust || {};"
        },
        {
          "file": "config.js",
          "line": 21,
          "content": "window.labelColorAdjust = { ses: 0.85, lga: 1.0, cfa: 1.0, ambulance: 1.0, police: 1.0, frv: 1.0 };"
        },
        {
          "file": "endpoints.md",
          "line": 203,
          "content": "window.labelColorAdjust = {"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 28,
          "content": "window.labelColorAdjust    \u001a configurationManager.get('labelColorAdjust')"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 35,
          "content": "| `window.labelColorAdjust` | Label color adjustments | `configurationManager.get('labelColorAdjust')` | Configuration migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 101,
          "content": "'window.labelColorAdjust': 'configurationManager.get(\"labelColorAdjust\")',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 38,
          "content": "'window.labelColorAdjust',"
        },
        {
          "file": "activeList.real.test.js",
          "line": 115,
          "content": "global.labelColorAdjust = window.labelColorAdjust;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 145,
          "content": "global.labelColorAdjust = window.labelColorAdjust;"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 40,
          "content": "| `window.labelColorAdjust` | `configurationManager.get('labelColorAdjust')` | Configuration migration | **HIGH** |"
        }
      ]
    },
    "window.headerColorAdjust": {
      "count": 8,
      "locations": [
        {
          "file": "bootstrap.js",
          "line": 740,
          "content": "const factor = window.headerColorAdjust[cat] ?? 1.0;"
        },
        {
          "file": "bootstrap.js",
          "line": 967,
          "content": "const factor = window.headerColorAdjust[cat] ?? 1.0;"
        },
        {
          "file": "config.js",
          "line": 23,
          "content": "window.headerColorAdjust = { ses: 0.85, lga: 1.0, cfa: 0.9, ambulance: 1.0, police: 0.95, frv: 0.9 };"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 29,
          "content": "window.headerColorAdjust   \u001a configurationManager.get('headerColorAdjust')"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 36,
          "content": "| `window.headerColorAdjust` | Header color adjustments | `configurationManager.get('headerColorAdjust')` | Configuration migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 102,
          "content": "'window.headerColorAdjust': 'configurationManager.get(\"headerColorAdjust\")',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 39,
          "content": "'window.headerColorAdjust',"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 41,
          "content": "| `window.headerColorAdjust` | `configurationManager.get('headerColorAdjust')` | Configuration migration | **HIGH** |"
        }
      ]
    },
    "window.categoryMeta": {
      "count": 30,
      "locations": [
        {
          "file": "ActiveListManager.js.html",
          "line": 3320,
          "content": "const meta = window.categoryMeta?.[category];"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3538,
          "content": "const isPoint = window.categoryMeta?.[category]?.type === 'point';"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3582,
          "content": "const meta = window.categoryMeta?.[category];"
        },
        {
          "file": "ActiveListManager.js.html",
          "line": 3628,
          "content": "const meta = window.categoryMeta?.[category];"
        },
        {
          "file": "LegacyIntegrationBridge.js.html",
          "line": 1200,
          "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.categoryMeta = window.categoryMeta || {};</span>"
        },
        {
          "file": "ActiveListManager.js",
          "line": 609,
          "content": "const meta = window.categoryMeta?.[category];"
        },
        {
          "file": "ActiveListManager.js",
          "line": 827,
          "content": "const isPoint = window.categoryMeta?.[category]?.type === 'point';"
        },
        {
          "file": "ActiveListManager.js",
          "line": 871,
          "content": "const meta = window.categoryMeta?.[category];"
        },
        {
          "file": "ActiveListManager.js",
          "line": 917,
          "content": "const meta = window.categoryMeta?.[category];"
        },
        {
          "file": "ActiveListManager.test.js",
          "line": 193,
          "content": "delete window.categoryMeta;"
        },
        {
          "file": "bootstrap.js",
          "line": 714,
          "content": "const fn = window.categoryMeta?.[cat]?.styleFn;"
        },
        {
          "file": "polygons.js",
          "line": 38,
          "content": "const meta = window.categoryMeta[category];"
        },
        {
          "file": "polygons.js",
          "line": 165,
          "content": "if (window.categoryMeta[category].type === 'polygon') {"
        },
        {
          "file": "polygons.js",
          "line": 284,
          "content": "if (window.categoryMeta[category].type === 'polygon') {"
        },
        {
          "file": "LegacyIntegrationBridge.js",
          "line": 255,
          "content": "window.categoryMeta = window.categoryMeta || {};"
        },
        {
          "file": "bootstrap.js",
          "line": 941,
          "content": "const fn = window.categoryMeta?.[cat]?.styleFn;"
        },
        {
          "file": "config.js",
          "line": 52,
          "content": "window.categoryMeta = {"
        },
        {
          "file": "endpoints.md",
          "line": 114,
          "content": "window.categoryMeta = {"
        },
        {
          "file": "endpoints.md",
          "line": 313,
          "content": "const container = document.getElementById(window.categoryMeta[category].listId);"
        },
        {
          "file": "setup.md",
          "line": 351,
          "content": "window.categoryMeta.newcategory = {"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 25,
          "content": "window.categoryMeta        \u001a configurationManager.get('categoryMeta')"
        },
        {
          "file": "variable-migration-quick-reference.md",
          "line": 128,
          "content": "1. `window.categoryMeta` \u001a `configurationManager.get('categoryMeta')`"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 32,
          "content": "| `window.categoryMeta` | Category metadata | `configurationManager.get('categoryMeta')` | Configuration migration |"
        },
        {
          "file": "variable-naming-strategy.md",
          "line": 98,
          "content": "'window.categoryMeta': 'configurationManager.get(\"categoryMeta\")',"
        },
        {
          "file": "analyze-legacy-usage.js",
          "line": 40,
          "content": "'window.categoryMeta'"
        },
        {
          "file": "activeList.real.test.js",
          "line": 112,
          "content": "global.categoryMeta = window.categoryMeta;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 126,
          "content": "window.categoryMeta = {"
        },
        {
          "file": "activeList.real.test.js",
          "line": 142,
          "content": "global.categoryMeta = window.categoryMeta;"
        },
        {
          "file": "activeList.real.test.js",
          "line": 373,
          "content": "window.categoryMeta.ses = { type: 'polygon' };"
        },
        {
          "file": "legacy_code_inventory.md",
          "line": 37,
          "content": "| `window.categoryMeta` | `configurationManager.get('categoryMeta')` | Configuration migration | **HIGH** |"
        }
      ]
    }
  },
  "files": {
    "ActiveListManager.js.html": {
      "legacyFunctions": 17,
      "legacyGlobals": 25,
      "totalUsage": 42,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.setEmphasis",
        "window.ensureLabel",
        "window.removeLabel"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.outlineColors",
        "window.labelColorAdjust",
        "window.categoryMeta"
      ]
    },
    "ES6IntegrationManager.js.html": {
      "legacyFunctions": 16,
      "legacyGlobals": 0,
      "totalUsage": 16,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.BulkOperationManager"
      ],
      "globals": []
    },
    "ActiveListManager.js": {
      "legacyFunctions": 17,
      "legacyGlobals": 25,
      "totalUsage": 42,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.setEmphasis",
        "window.ensureLabel",
        "window.removeLabel"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.outlineColors",
        "window.labelColorAdjust",
        "window.categoryMeta"
      ]
    },
    "ActiveListManager.test.js": {
      "legacyFunctions": 15,
      "legacyGlobals": 9,
      "totalUsage": 24,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.setEmphasis",
        "window.ensureLabel",
        "window.removeLabel"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.outlineColors",
        "window.labelColorAdjust",
        "window.categoryMeta"
      ]
    },
    "bootstrap.js": {
      "legacyFunctions": 33,
      "legacyGlobals": 16,
      "totalUsage": 49,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.setupCollapsible",
        "window.removeLabel"
      ],
      "globals": [
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.outlineColors",
        "window.headerColorAdjust",
        "window.categoryMeta"
      ]
    },
    "polygons.js": {
      "legacyFunctions": 11,
      "legacyGlobals": 34,
      "totalUsage": 45,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.createCheckbox",
        "window.ensureLabel",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.isBulkOperation",
        "window.pendingLabels",
        "window.outlineColors",
        "window.categoryMeta"
      ]
    },
    "ES6IntegrationManager.js": {
      "legacyFunctions": 16,
      "legacyGlobals": 0,
      "totalUsage": 16,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.BulkOperationManager"
      ],
      "globals": []
    },
    "ES6IntegrationManager.test.js": {
      "legacyFunctions": 5,
      "legacyGlobals": 0,
      "totalUsage": 5,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.BulkOperationManager"
      ],
      "globals": []
    },
    "activeList.js": {
      "legacyFunctions": 9,
      "legacyGlobals": 0,
      "totalUsage": 9,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.ensureLabel",
        "window.removeLabel",
        "window.BulkOperationManager"
      ],
      "globals": []
    },
    "state.js": {
      "legacyFunctions": 6,
      "legacyGlobals": 13,
      "totalUsage": 19,
      "functions": [
        "window.updateActiveList",
        "window.ensureLabel",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.activeListFilter",
        "window.isBulkOperation",
        "window.pendingLabels"
      ]
    },
    "migration-progress.md": {
      "legacyFunctions": 10,
      "legacyGlobals": 10,
      "totalUsage": 20,
      "functions": [
        "window.updateActiveList",
        "window.createCheckbox",
        "window.setupCollapsible",
        "window.setEmphasis",
        "window.ensureLabel",
        "window.removeLabel",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.activeListFilter",
        "window.isBulkOperation"
      ]
    },
    "setup.md": {
      "legacyFunctions": 10,
      "legacyGlobals": 4,
      "totalUsage": 14,
      "functions": [
        "window.updateActiveList",
        "window.createCheckbox",
        "window.ensureLabel",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.categoryMeta"
      ]
    },
    "variable-migration-quick-reference.md": {
      "legacyFunctions": 13,
      "legacyGlobals": 20,
      "totalUsage": 33,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.createCheckbox",
        "window.setupCollapsible",
        "window.setEmphasis",
        "window.ensureLabel",
        "window.removeLabel",
        "window.toggleAll",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.activeListFilter",
        "window.isBulkOperation",
        "window.pendingLabels",
        "window.outlineColors",
        "window.baseOpacities",
        "window.labelColorAdjust",
        "window.headerColorAdjust",
        "window.categoryMeta"
      ]
    },
    "variable-naming-strategy.md": {
      "legacyFunctions": 11,
      "legacyGlobals": 26,
      "totalUsage": 37,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.createCheckbox",
        "window.setupCollapsible",
        "window.setEmphasis",
        "window.ensureLabel",
        "window.removeLabel",
        "window.toggleAll",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.activeListFilter",
        "window.isBulkOperation",
        "window.pendingLabels",
        "window.outlineColors",
        "window.baseOpacities",
        "window.labelColorAdjust",
        "window.headerColorAdjust",
        "window.categoryMeta"
      ]
    },
    "README.md": {
      "legacyFunctions": 10,
      "legacyGlobals": 3,
      "totalUsage": 13,
      "functions": [
        "window.updateActiveList",
        "window.createCheckbox",
        "window.ensureLabel",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers"
      ]
    },
    "analyze-legacy-usage.js": {
      "legacyFunctions": 10,
      "legacyGlobals": 13,
      "totalUsage": 23,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.createCheckbox",
        "window.setupCollapsible",
        "window.setEmphasis",
        "window.ensureLabel",
        "window.removeLabel",
        "window.toggleAll",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.activeListFilter",
        "window.isBulkOperation",
        "window.pendingLabels",
        "window.outlineColors",
        "window.baseOpacities",
        "window.labelColorAdjust",
        "window.headerColorAdjust",
        "window.categoryMeta"
      ]
    },
    "legacy_code_inventory.md": {
      "legacyFunctions": 14,
      "legacyGlobals": 14,
      "totalUsage": 28,
      "functions": [
        "window.updateActiveList",
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.createCheckbox",
        "window.setupCollapsible",
        "window.setEmphasis",
        "window.ensureLabel",
        "window.removeLabel",
        "window.toggleAll",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.activeListFilter",
        "window.isBulkOperation",
        "window.pendingLabels",
        "window.outlineColors",
        "window.baseOpacities",
        "window.labelColorAdjust",
        "window.headerColorAdjust",
        "window.categoryMeta"
      ]
    },
    "LegacyIntegrationBridge.js.html": {
      "legacyFunctions": 3,
      "legacyGlobals": 12,
      "totalUsage": 15,
      "functions": [
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.pendingLabels",
        "window.outlineColors",
        "window.baseOpacities",
        "window.categoryMeta"
      ]
    },
    "LegacyIntegrationBridge.js": {
      "legacyFunctions": 3,
      "legacyGlobals": 12,
      "totalUsage": 15,
      "functions": [
        "window.beginActiveListBulk",
        "window.endActiveListBulk",
        "window.BulkOperationManager"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.pendingLabels",
        "window.outlineColors",
        "window.baseOpacities",
        "window.categoryMeta"
      ]
    },
    "utils.js": {
      "legacyFunctions": 1,
      "legacyGlobals": 0,
      "totalUsage": 1,
      "functions": [
        "window.createCheckbox"
      ],
      "globals": []
    },
    "CollapsibleManager.js.html": {
      "legacyFunctions": 1,
      "legacyGlobals": 0,
      "totalUsage": 1,
      "functions": [
        "window.setupCollapsible"
      ],
      "globals": []
    },
    "CollapsibleManager.js": {
      "legacyFunctions": 1,
      "legacyGlobals": 0,
      "totalUsage": 1,
      "functions": [
        "window.setupCollapsible"
      ],
      "globals": []
    },
    "collapsible.js": {
      "legacyFunctions": 1,
      "legacyGlobals": 0,
      "totalUsage": 1,
      "functions": [
        "window.setupCollapsible"
      ],
      "globals": []
    },
    "app-bootstrap.md": {
      "legacyFunctions": 3,
      "legacyGlobals": 0,
      "totalUsage": 3,
      "functions": [
        "window.setupCollapsible"
      ],
      "globals": []
    },
    "terms-of-reference.md": {
      "legacyFunctions": 1,
      "legacyGlobals": 0,
      "totalUsage": 1,
      "functions": [
        "window.setupCollapsible"
      ],
      "globals": []
    },
    "emphasise.js": {
      "legacyFunctions": 1,
      "legacyGlobals": 0,
      "totalUsage": 1,
      "functions": [
        "window.setEmphasis"
      ],
      "globals": []
    },
    "activeList.real.test.js": {
      "legacyFunctions": 3,
      "legacyGlobals": 30,
      "totalUsage": 33,
      "functions": [
        "window.setEmphasis",
        "window.ensureLabel",
        "window.removeLabel"
      ],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.outlineColors",
        "window.labelColorAdjust",
        "window.categoryMeta"
      ]
    },
    "LabelManager.js.html": {
      "legacyFunctions": 2,
      "legacyGlobals": 0,
      "totalUsage": 2,
      "functions": [
        "window.ensureLabel",
        "window.removeLabel"
      ],
      "globals": []
    },
    "PolygonLoader.js.html": {
      "legacyFunctions": 4,
      "legacyGlobals": 0,
      "totalUsage": 4,
      "functions": [
        "window.ensureLabel",
        "window.removeLabel"
      ],
      "globals": []
    },
    "LabelManager.js": {
      "legacyFunctions": 2,
      "legacyGlobals": 0,
      "totalUsage": 2,
      "functions": [
        "window.ensureLabel",
        "window.removeLabel"
      ],
      "globals": []
    },
    "PolygonLoader.js": {
      "legacyFunctions": 4,
      "legacyGlobals": 0,
      "totalUsage": 4,
      "functions": [
        "window.ensureLabel",
        "window.removeLabel"
      ],
      "globals": []
    },
    "labels.js": {
      "legacyFunctions": 2,
      "legacyGlobals": 0,
      "totalUsage": 2,
      "functions": [
        "window.ensureLabel",
        "window.removeLabel"
      ],
      "globals": []
    },
    "LegacyCompatibility.js.html": {
      "legacyFunctions": 3,
      "legacyGlobals": 0,
      "totalUsage": 3,
      "functions": [
        "window.BulkOperationManager"
      ],
      "globals": []
    },
    "LegacyCompatibility.js": {
      "legacyFunctions": 3,
      "legacyGlobals": 0,
      "totalUsage": 3,
      "functions": [
        "window.BulkOperationManager"
      ],
      "globals": []
    },
    "data-flow.md": {
      "legacyFunctions": 0,
      "legacyGlobals": 57,
      "totalUsage": 57,
      "functions": [],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.emphasised",
        "window.nameLabelMarkers",
        "window.activeListFilter",
        "window.isBulkOperation",
        "window.pendingLabels"
      ]
    },
    "data-loading.md": {
      "legacyFunctions": 0,
      "legacyGlobals": 7,
      "totalUsage": 7,
      "functions": [],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey"
      ]
    },
    "map-integration.real.test.js": {
      "legacyFunctions": 0,
      "legacyGlobals": 5,
      "totalUsage": 5,
      "functions": [],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey",
        "window.outlineColors"
      ]
    },
    "map-integration.test.js": {
      "legacyFunctions": 0,
      "legacyGlobals": 3,
      "totalUsage": 3,
      "functions": [],
      "globals": [
        "window.featureLayers",
        "window.namesByCategory",
        "window.nameToKey"
      ]
    },
    "SearchManager.js.html": {
      "legacyFunctions": 0,
      "legacyGlobals": 19,
      "totalUsage": 19,
      "functions": [],
      "globals": [
        "window.namesByCategory",
        "window.nameToKey",
        "window.outlineColors",
        "window.labelColorAdjust"
      ]
    },
    "SearchManager.js": {
      "legacyFunctions": 0,
      "legacyGlobals": 19,
      "totalUsage": 19,
      "functions": [],
      "globals": [
        "window.namesByCategory",
        "window.nameToKey",
        "window.outlineColors",
        "window.labelColorAdjust"
      ]
    },
    "SearchManager.test.js": {
      "legacyFunctions": 0,
      "legacyGlobals": 6,
      "totalUsage": 6,
      "functions": [],
      "globals": [
        "window.namesByCategory",
        "window.nameToKey",
        "window.outlineColors",
        "window.labelColorAdjust"
      ]
    },
    "StateManager.js.html": {
      "legacyFunctions": 0,
      "legacyGlobals": 2,
      "totalUsage": 2,
      "functions": [],
      "globals": [
        "window.activeListFilter",
        "window.isBulkOperation"
      ]
    },
    "StateManager.js": {
      "legacyFunctions": 0,
      "legacyGlobals": 2,
      "totalUsage": 2,
      "functions": [],
      "globals": [
        "window.activeListFilter",
        "window.isBulkOperation"
      ]
    },
    "polygons_old.js": {
      "legacyFunctions": 0,
      "legacyGlobals": 1,
      "totalUsage": 1,
      "functions": [],
      "globals": [
        "window.outlineColors"
      ]
    },
    "config.js": {
      "legacyFunctions": 0,
      "legacyGlobals": 5,
      "totalUsage": 5,
      "functions": [],
      "globals": [
        "window.outlineColors",
        "window.baseOpacities",
        "window.labelColorAdjust",
        "window.headerColorAdjust",
        "window.categoryMeta"
      ]
    },
    "endpoints.md": {
      "legacyFunctions": 0,
      "legacyGlobals": 5,
      "totalUsage": 5,
      "functions": [],
      "globals": [
        "window.outlineColors",
        "window.baseOpacities",
        "window.labelColorAdjust",
        "window.categoryMeta"
      ]
    }
  },
  "summary": {
    "totalFunctionUsage": 259,
    "totalGlobalUsage": 399,
    "totalLegacyUsage": 658,
    "filesWithLegacyUsage": 46,
    "mostUsedFunctions": [
      [
        "window.BulkOperationManager",
        {
          "count": 50,
          "locations": [
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 775,
              "content": "// Create window.BulkOperationManager compatibility"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 776,
              "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (window.BulkOperationManager) {"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 777,
              "content": "this.legacyFunctions.set('BulkOperationManager', window.BulkOperationManager);"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 796,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        if (window.BulkOperationManager) {</span>"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 797,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >          window.BulkOperationManager.markActiveListUpdatePending();</span>"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 825,
              "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (window.BulkOperationManager) {"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 826,
              "content": "return window.BulkOperationManager.begin('legacy');"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 835,
              "content": "if (window.BulkOperationManager) {"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 836,
              "content": "window.BulkOperationManager.end();"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 870,
              "content": "<span class=\"missing-if-branch\" title=\"if path not taken\" >I</span>if (!window.BulkOperationManager) {"
            },
            {
              "file": "LegacyCompatibility.js.html",
              "line": 860,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      return window.BulkOperationManager ? window.BulkOperationManager.begin('legacy') : false;</span>"
            },
            {
              "file": "LegacyCompatibility.js.html",
              "line": 864,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      if (window.BulkOperationManager) {</span>"
            },
            {
              "file": "LegacyCompatibility.js.html",
              "line": 865,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.BulkOperationManager.end();</span>"
            },
            {
              "file": "LegacyIntegrationBridge.js.html",
              "line": 1205,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.BulkOperationManager = window.BulkOperationManager || {</span>"
            },
            {
              "file": "polygons.js",
              "line": 235,
              "content": "const bulkStarted = window.BulkOperationManager.begin('toggleAll', items.length);"
            },
            {
              "file": "polygons.js",
              "line": 287,
              "content": "if (window.BulkOperationManager.isActive()) {"
            },
            {
              "file": "polygons.js",
              "line": 288,
              "content": "window.BulkOperationManager.addPendingLabel({category, key, labelName, isPoint: false, layer: l});"
            },
            {
              "file": "polygons.js",
              "line": 331,
              "content": "window.BulkOperationManager.end(); // This will handle labels and active list updates"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 92,
              "content": "// Create window.BulkOperationManager compatibility"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 93,
              "content": "if (window.BulkOperationManager) {"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 94,
              "content": "this.legacyFunctions.set('BulkOperationManager', window.BulkOperationManager);"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 113,
              "content": "if (window.BulkOperationManager) {"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 114,
              "content": "window.BulkOperationManager.markActiveListUpdatePending();"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 142,
              "content": "if (window.BulkOperationManager) {"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 143,
              "content": "return window.BulkOperationManager.begin('legacy');"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 152,
              "content": "if (window.BulkOperationManager) {"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 153,
              "content": "window.BulkOperationManager.end();"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 187,
              "content": "if (!window.BulkOperationManager) {"
            },
            {
              "file": "ES6IntegrationManager.test.js",
              "line": 88,
              "content": "expect(window.BulkOperationManager.begin).toHaveBeenCalledWith('legacy');"
            },
            {
              "file": "ES6IntegrationManager.test.js",
              "line": 91,
              "content": "expect(window.BulkOperationManager.end).toHaveBeenCalled();"
            },
            {
              "file": "LegacyCompatibility.js",
              "line": 145,
              "content": "return window.BulkOperationManager ? window.BulkOperationManager.begin('legacy') : false;"
            },
            {
              "file": "LegacyCompatibility.js",
              "line": 149,
              "content": "if (window.BulkOperationManager) {"
            },
            {
              "file": "LegacyCompatibility.js",
              "line": 150,
              "content": "window.BulkOperationManager.end();"
            },
            {
              "file": "LegacyIntegrationBridge.js",
              "line": 260,
              "content": "window.BulkOperationManager = window.BulkOperationManager || {"
            },
            {
              "file": "activeList.js",
              "line": 13,
              "content": "if (window.BulkOperationManager && window.BulkOperationManager.isActive()) {"
            },
            {
              "file": "activeList.js",
              "line": 17,
              "content": "window.BulkOperationManager.markActiveListUpdatePending();"
            },
            {
              "file": "activeList.js",
              "line": 31,
              "content": "if (window.BulkOperationManager && window.BulkOperationManager.isActive()) {"
            },
            {
              "file": "state.js",
              "line": 42,
              "content": "window.BulkOperationManager = {"
            },
            {
              "file": "state.js",
              "line": 249,
              "content": "return window.BulkOperationManager.begin('legacy');"
            },
            {
              "file": "state.js",
              "line": 253,
              "content": "window.BulkOperationManager.end();"
            },
            {
              "file": "migration-progress.md",
              "line": 25,
              "content": "- `window.BulkOperationManager`: 42 usages"
            },
            {
              "file": "migration-progress.md",
              "line": 58,
              "content": "2. `window.BulkOperationManager` (42 usages) \u001a `BulkOperationManager` ES6 module"
            },
            {
              "file": "setup.md",
              "line": 28,
              "content": "- **Bulk Operations**: `window.BulkOperationManager`, `window.isBulkOperation`"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 35,
              "content": "window.BulkOperationManager \u001a stateManager.bulkOperation"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 133,
              "content": "1. `window.BulkOperationManager` \u001a `stateManager.bulkOperation`"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 50,
              "content": "| `window.BulkOperationManager` | Bulk operation coordination | `stateManager.bulkOperation` | State management migration |"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 112,
              "content": "'window.BulkOperationManager': 'stateManager.bulkOperation',"
            },
            {
              "file": "README.md",
              "line": 113,
              "content": "- **Bulk Operations**: `window.BulkOperationManager`, `window.isBulkOperation`"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 24,
              "content": "'window.BulkOperationManager'"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 46,
              "content": "| `window.BulkOperationManager` | `stateManager.bulkOperation` | State management migration | **CRITICAL** |"
            }
          ]
        }
      ],
      [
        "window.setupCollapsible",
        {
          "count": 39,
          "locations": [
            {
              "file": "CollapsibleManager.js.html",
              "line": 1045,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >  window.setupCollapsible = <span class=\"fstat-no\" title=\"function not covered\" >(h</span>eaderId, listId, expanded) =&gt; {</span>"
            },
            {
              "file": "bootstrap.js",
              "line": 364,
              "content": "if (window.setupCollapsible) {"
            },
            {
              "file": "bootstrap.js",
              "line": 366,
              "content": "window.setupCollapsible('activeHeader', 'activeList', false);"
            },
            {
              "file": "bootstrap.js",
              "line": 367,
              "content": "window.setupCollapsible('showAllHeader', 'showAllList');"
            },
            {
              "file": "bootstrap.js",
              "line": 368,
              "content": "window.setupCollapsible('sesHeader', 'sesList');"
            },
            {
              "file": "bootstrap.js",
              "line": 369,
              "content": "window.setupCollapsible('lgaHeader', 'lgaList');"
            },
            {
              "file": "bootstrap.js",
              "line": 370,
              "content": "window.setupCollapsible('cfaHeader', 'cfaList');"
            },
            {
              "file": "bootstrap.js",
              "line": 371,
              "content": "window.setupCollapsible('policeHeader', 'policeList');"
            },
            {
              "file": "bootstrap.js",
              "line": 372,
              "content": "window.setupCollapsible('ambulanceHeader', 'ambulanceList');"
            },
            {
              "file": "bootstrap.js",
              "line": 373,
              "content": "window.setupCollapsible('frvHeader', 'frvList');"
            },
            {
              "file": "CollapsibleManager.js",
              "line": 324,
              "content": "window.setupCollapsible = (headerId, listId, expanded) => {"
            },
            {
              "file": "collapsible.js",
              "line": 5,
              "content": "window.setupCollapsible = function(headerId,listId,expanded=false){"
            },
            {
              "file": "bootstrap.js",
              "line": 531,
              "content": "exists: typeof window.setupCollapsible,"
            },
            {
              "file": "bootstrap.js",
              "line": 532,
              "content": "isFunction: typeof window.setupCollapsible === 'function',"
            },
            {
              "file": "bootstrap.js",
              "line": 533,
              "content": "value: window.setupCollapsible"
            },
            {
              "file": "bootstrap.js",
              "line": 537,
              "content": "if (window.setupCollapsible) {"
            },
            {
              "file": "bootstrap.js",
              "line": 541,
              "content": "window.setupCollapsible('activeHeader', 'activeList', false);"
            },
            {
              "file": "bootstrap.js",
              "line": 542,
              "content": "window.setupCollapsible('showAllHeader', 'showAllList');"
            },
            {
              "file": "bootstrap.js",
              "line": 543,
              "content": "window.setupCollapsible('sesHeader', 'sesList');"
            },
            {
              "file": "bootstrap.js",
              "line": 544,
              "content": "window.setupCollapsible('lgaHeader', 'lgaList');"
            },
            {
              "file": "bootstrap.js",
              "line": 545,
              "content": "window.setupCollapsible('cfaHeader', 'cfaList');"
            },
            {
              "file": "bootstrap.js",
              "line": 546,
              "content": "window.setupCollapsible('policeHeader', 'policeList');"
            },
            {
              "file": "bootstrap.js",
              "line": 547,
              "content": "window.setupCollapsible('ambulanceHeader', 'ambulanceList');"
            },
            {
              "file": "bootstrap.js",
              "line": 548,
              "content": "window.setupCollapsible('frvHeader', 'frvList');"
            },
            {
              "file": "app-bootstrap.md",
              "line": 320,
              "content": "window.setupCollapsible('sesHeader', 'sesList', false);"
            },
            {
              "file": "app-bootstrap.md",
              "line": 321,
              "content": "window.setupCollapsible('lgaHeader', 'lgaList', false);"
            },
            {
              "file": "app-bootstrap.md",
              "line": 334,
              "content": "window.setupCollapsible = function(headerId, listId, startCollapsed = false) {"
            },
            {
              "file": "migration-progress.md",
              "line": 24,
              "content": "- `window.setupCollapsible`: 45 usages"
            },
            {
              "file": "migration-progress.md",
              "line": 57,
              "content": "1. `window.setupCollapsible` (45 usages) \u001a `CollapsibleManager`"
            },
            {
              "file": "setup.md",
              "line": 26,
              "content": "- **UI Functions**: `window.createCheckbox`, `window.setupCollapsible`, `window.setEmphasis`"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 67,
              "content": "window.setupCollapsible() \u001a collapsibleManager.setupCollapsible()"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 135,
              "content": "3. `window.setupCollapsible()` \u001a `collapsibleManager.setupCollapsible()`"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 127,
              "content": "'window.setupCollapsible': 'collapsibleManager.setupCollapsible',"
            },
            {
              "file": "README.md",
              "line": 111,
              "content": "- **UI Functions**: `window.createCheckbox`, `window.setupCollapsible`, `window.setEmphasis`"
            },
            {
              "file": "terms-of-reference.md",
              "line": 172,
              "content": "window.setupCollapsible = function(headerId, listId) {"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 19,
              "content": "'window.setupCollapsible',"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 66,
              "content": "| `window.setupCollapsible()` | `collapsibleManager.setupCollapsible()` | UI migration | **HIGH** |"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 197,
              "content": "- Directly calls `window.setupCollapsible()`, `window.initSearch()`, `window.updateActiveList()`"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 296,
              "content": "- Global `window.setupCollapsible()` function"
            }
          ]
        }
      ],
      [
        "window.ensureLabel",
        {
          "count": 36,
          "locations": [
            {
              "file": "ActiveListManager.js.html",
              "line": 3580,
              "content": "<span class=\"missing-if-branch\" title=\"if path not taken\" >I</span>if (!window.ensureLabel) <span class=\"cstat-no\" title=\"statement not covered\" >return;</span>"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3593,
              "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 2093,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        if (window.ensureLabel) {</span>"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 2094,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >          window.ensureLabel(category, key, name, isPoint, layerOrMarker);</span>"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 2117,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      if (layerOrMarker &amp;&amp; window.ensureLabel) {</span>"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 2118,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.ensureLabel(category, key, name, isPoint, layerOrMarker);</span>"
            },
            {
              "file": "LabelManager.js.html",
              "line": 1819,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >  window.ensureLabel = <span class=\"fstat-no\" title=\"function not covered\" >(c</span>ategory, key, name, isPoint, layerOrMarker) =&gt; </span>"
            },
            {
              "file": "PolygonLoader.js.html",
              "line": 2163,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >    if (window.ensureLabel) {</span>"
            },
            {
              "file": "PolygonLoader.js.html",
              "line": 2164,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.ensureLabel(category, key, name, isPoint, layer);</span>"
            },
            {
              "file": "ActiveListManager.js",
              "line": 869,
              "content": "if (!window.ensureLabel) return;"
            },
            {
              "file": "ActiveListManager.js",
              "line": 882,
              "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 121,
              "content": "window.ensureLabel = jest.fn();"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 199,
              "content": "delete window.ensureLabel;"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 472,
              "content": "expect(window.ensureLabel).toHaveBeenCalled();"
            },
            {
              "file": "polygons.js",
              "line": 172,
              "content": "window.ensureLabel(category, key, labelName, false, l);"
            },
            {
              "file": "polygons.js",
              "line": 205,
              "content": "window.ensureLabel(category, key, labelName, false, l);"
            },
            {
              "file": "polygons.js",
              "line": 290,
              "content": "window.ensureLabel(category, key, labelName, false, l);"
            },
            {
              "file": "ActiveListManager.js",
              "line": 490,
              "content": "if (window.ensureLabel) {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 491,
              "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
            },
            {
              "file": "ActiveListManager.js",
              "line": 514,
              "content": "if (layerOrMarker && window.ensureLabel) {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 515,
              "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
            },
            {
              "file": "LabelManager.js",
              "line": 582,
              "content": "window.ensureLabel = (category, key, name, isPoint, layerOrMarker) =>"
            },
            {
              "file": "PolygonLoader.js",
              "line": 648,
              "content": "if (window.ensureLabel) {"
            },
            {
              "file": "PolygonLoader.js",
              "line": 649,
              "content": "window.ensureLabel(category, key, name, isPoint, layer);"
            },
            {
              "file": "activeList.js",
              "line": 257,
              "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
            },
            {
              "file": "activeList.js",
              "line": 274,
              "content": "window.ensureLabel(category, key, name, isPoint, layerOrMarker);"
            },
            {
              "file": "labels.js",
              "line": 139,
              "content": "window.ensureLabel = function(category,key,displayName,isPoint,layerOrMarker){"
            },
            {
              "file": "state.js",
              "line": 202,
              "content": "window.ensureLabel(category, key, labelName, isPoint, layer);"
            },
            {
              "file": "migration-progress.md",
              "line": 62,
              "content": "6. `window.ensureLabel` (2 usages) \u001a `LabelManager`"
            },
            {
              "file": "setup.md",
              "line": 27,
              "content": "- **Label Management**: `window.ensureLabel`, `window.removeLabel`"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 69,
              "content": "window.ensureLabel()      \u001a labelManager.ensureLabel()"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 129,
              "content": "'window.ensureLabel': 'labelManager.ensureLabel',"
            },
            {
              "file": "README.md",
              "line": 112,
              "content": "- **Label Management**: `window.ensureLabel`, `window.removeLabel`"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 21,
              "content": "'window.ensureLabel',"
            },
            {
              "file": "activeList.real.test.js",
              "line": 134,
              "content": "window.ensureLabel = jest.fn();"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 68,
              "content": "| `window.ensureLabel()` | `labelManager.ensureLabel()` | UI migration | **HIGH** |"
            }
          ]
        }
      ],
      [
        "window.removeLabel",
        {
          "count": 31,
          "locations": [
            {
              "file": "ActiveListManager.js.html",
              "line": 3604,
              "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (window.removeLabel) {"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3605,
              "content": "window.removeLabel(category, key);"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 2097,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        if (window.removeLabel) {</span>"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 2098,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >          window.removeLabel(category, key);</span>"
            },
            {
              "file": "LabelManager.js.html",
              "line": 1821,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >  window.removeLabel = <span class=\"fstat-no\" title=\"function not covered\" >(c</span>ategory, key) =&gt; </span>"
            },
            {
              "file": "PolygonLoader.js.html",
              "line": 2169,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >    if (window.removeLabel) {</span>"
            },
            {
              "file": "PolygonLoader.js.html",
              "line": 2170,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.removeLabel(category, key);</span>"
            },
            {
              "file": "ActiveListManager.js",
              "line": 893,
              "content": "if (window.removeLabel) {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 894,
              "content": "window.removeLabel(category, key);"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 122,
              "content": "window.removeLabel = jest.fn();"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 200,
              "content": "delete window.removeLabel;"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 478,
              "content": "expect(window.removeLabel).toHaveBeenCalledWith('ses', 'alpine_resorts');"
            },
            {
              "file": "bootstrap.js",
              "line": 904,
              "content": "try { window.removeLabel(cat, key); } catch {}"
            },
            {
              "file": "bootstrap.js",
              "line": 966,
              "content": "try { window.removeLabel(cat, key); } catch {}"
            },
            {
              "file": "ActiveListManager.js",
              "line": 494,
              "content": "if (window.removeLabel) {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 495,
              "content": "window.removeLabel(category, key);"
            },
            {
              "file": "LabelManager.js",
              "line": 584,
              "content": "window.removeLabel = (category, key) =>"
            },
            {
              "file": "PolygonLoader.js",
              "line": 654,
              "content": "if (window.removeLabel) {"
            },
            {
              "file": "PolygonLoader.js",
              "line": 655,
              "content": "window.removeLabel(category, key);"
            },
            {
              "file": "activeList.js",
              "line": 259,
              "content": "window.removeLabel(category, key);"
            },
            {
              "file": "bootstrap.js",
              "line": 1175,
              "content": "try { window.removeLabel(cat, key); } catch {}"
            },
            {
              "file": "bootstrap.js",
              "line": 1239,
              "content": "try { window.removeLabel(cat, key); } catch {}"
            },
            {
              "file": "labels.js",
              "line": 196,
              "content": "window.removeLabel = function(category,key){"
            },
            {
              "file": "migration-progress.md",
              "line": 63,
              "content": "7. `window.removeLabel` (1 usage) \u001a `LabelManager`"
            },
            {
              "file": "setup.md",
              "line": 27,
              "content": "- **Label Management**: `window.ensureLabel`, `window.removeLabel`"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 70,
              "content": "window.removeLabel()      \u001a labelManager.removeLabel()"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 130,
              "content": "'window.removeLabel': 'labelManager.removeLabel',"
            },
            {
              "file": "README.md",
              "line": 112,
              "content": "- **Label Management**: `window.ensureLabel`, `window.removeLabel`"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 22,
              "content": "'window.removeLabel',"
            },
            {
              "file": "activeList.real.test.js",
              "line": 135,
              "content": "window.removeLabel = jest.fn();"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 69,
              "content": "| `window.removeLabel()` | `labelManager.removeLabel()` | UI migration | **HIGH** |"
            }
          ]
        }
      ],
      [
        "window.updateActiveList",
        {
          "count": 27,
          "locations": [
            {
              "file": "ActiveListManager.js.html",
              "line": 4027,
              "content": "window.updateActiveList = function() {"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 809,
              "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (!window.updateActiveList) {"
            },
            {
              "file": "ES6IntegrationManager.js.html",
              "line": 810,
              "content": "window.updateActiveList = <span class=\"fstat-no\" title=\"function not covered\" >fu</span>nction() {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 1316,
              "content": "window.updateActiveList = function() {"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 730,
              "content": "expect(window.updateActiveList).toBeDefined();"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 746,
              "content": "window.updateActiveList();"
            },
            {
              "file": "bootstrap.js",
              "line": 795,
              "content": "window.updateActiveList();"
            },
            {
              "file": "bootstrap.js",
              "line": 928,
              "content": "try { window.updateActiveList(); } catch {}"
            },
            {
              "file": "polygons.js",
              "line": 187,
              "content": "window.updateActiveList();"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 126,
              "content": "if (!window.updateActiveList) {"
            },
            {
              "file": "ES6IntegrationManager.js",
              "line": 127,
              "content": "window.updateActiveList = function() {"
            },
            {
              "file": "ES6IntegrationManager.test.js",
              "line": 73,
              "content": "expect(typeof window.updateActiveList).toBe('function');"
            },
            {
              "file": "activeList.js",
              "line": 82,
              "content": "window.updateActiveList = function(){"
            },
            {
              "file": "bootstrap.js",
              "line": 1022,
              "content": "window.updateActiveList();"
            },
            {
              "file": "bootstrap.js",
              "line": 1199,
              "content": "try { window.updateActiveList(); } catch {}"
            },
            {
              "file": "state.js",
              "line": 224,
              "content": "if (window.updateActiveList) {"
            },
            {
              "file": "state.js",
              "line": 226,
              "content": "window.updateActiveList();"
            },
            {
              "file": "migration-progress.md",
              "line": 26,
              "content": "- `window.updateActiveList`: 24 usages"
            },
            {
              "file": "migration-progress.md",
              "line": 59,
              "content": "3. `window.updateActiveList` (24 usages) \u001a `ActiveListManager`"
            },
            {
              "file": "setup.md",
              "line": 25,
              "content": "- **Active List Operations**: `window.updateActiveList`, `window.beginActiveListBulk`, `window.endActiveListBulk`"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 57,
              "content": "window.updateActiveList()     \u001a activeListManager.updateActiveList()"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 134,
              "content": "2. `window.updateActiveList()` \u001a `activeListManager.updateActiveList()`"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 123,
              "content": "'window.updateActiveList': 'activeListManager.updateActiveList',"
            },
            {
              "file": "README.md",
              "line": 110,
              "content": "- **Active List Operations**: `window.updateActiveList`, `window.beginActiveListBulk`, `window.endActiveListBulk`"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 15,
              "content": "'window.updateActiveList',"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 62,
              "content": "| `window.updateActiveList()` | `activeListManager.updateActiveList()` | UI migration | **HIGH** |"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 197,
              "content": "- Directly calls `window.setupCollapsible()`, `window.initSearch()`, `window.updateActiveList()`"
            }
          ]
        }
      ]
    ],
    "mostUsedGlobals": [
      [
        "window.nameToKey",
        {
          "count": 68,
          "locations": [
            {
              "file": "ActiveListManager.js.html",
              "line": 2997,
              "content": "if (!window.namesByCategory?.[category] || !window.nameToKey?.[category]) {"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3008,
              "content": "const key = window.nameToKey[category][name];"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3246,
              "content": "const key = window.nameToKey[category][name];"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3922,
              "content": "const name = Object.keys(window.nameToKey[category] || <span class=\"branch-1 cbranch-no\" title=\"branch not covered\" >{})</span>.find("
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3923,
              "content": "n =&gt; window.nameToKey[category][n] === key"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3980,
              "content": "const key = window.nameToKey[category][name];"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1669,
              "content": "if (window.namesByCategory &amp;&amp; window.nameToKey) {"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1693,
              "content": "if (!window.namesByCategory || !window.nameToKey) {"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1705,
              "content": "let key = window.nameToKey[category]?.[name];"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1709,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >          for (const k in window.nameToKey[category] || {}) {</span>"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1711,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >              key = window.nameToKey[category][k];</span>"
            },
            {
              "file": "LegacyIntegrationBridge.js.html",
              "line": 1194,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.nameToKey = window.nameToKey || {};</span>"
            },
            {
              "file": "LegacyIntegrationBridge.js.html",
              "line": 1241,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.nameToKey = nameToKey;</span>"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1006,
              "content": "const nameToKey = <span class=\"cstat-no\" title=\"statement not covered\" >window.nameToKey || {};</span>"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1171,
              "content": "const nameToKey = <span class=\"cstat-no\" title=\"statement not covered\" >window.nameToKey || {};</span>"
            },
            {
              "file": "ActiveListManager.js",
              "line": 286,
              "content": "if (!window.namesByCategory?.[category] || !window.nameToKey?.[category]) {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 297,
              "content": "const key = window.nameToKey[category][name];"
            },
            {
              "file": "ActiveListManager.js",
              "line": 535,
              "content": "const key = window.nameToKey[category][name];"
            },
            {
              "file": "ActiveListManager.js",
              "line": 1211,
              "content": "const name = Object.keys(window.nameToKey[category] || {}).find("
            },
            {
              "file": "ActiveListManager.js",
              "line": 1212,
              "content": "n => window.nameToKey[category][n] === key"
            },
            {
              "file": "ActiveListManager.js",
              "line": 1269,
              "content": "const key = window.nameToKey[category][name];"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 192,
              "content": "delete window.nameToKey;"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 752,
              "content": "delete window.nameToKey;"
            },
            {
              "file": "SearchManager.js",
              "line": 212,
              "content": "if (window.namesByCategory && window.nameToKey) {"
            },
            {
              "file": "SearchManager.js",
              "line": 236,
              "content": "if (!window.namesByCategory || !window.nameToKey) {"
            },
            {
              "file": "SearchManager.js",
              "line": 248,
              "content": "let key = window.nameToKey[category]?.[name];"
            },
            {
              "file": "SearchManager.js",
              "line": 252,
              "content": "for (const k in window.nameToKey[category] || {}) {"
            },
            {
              "file": "SearchManager.js",
              "line": 254,
              "content": "key = window.nameToKey[category][k];"
            },
            {
              "file": "SearchManager.test.js",
              "line": 162,
              "content": "delete window.nameToKey;"
            },
            {
              "file": "SearchManager.test.js",
              "line": 536,
              "content": "delete window.nameToKey;"
            },
            {
              "file": "polygons.js",
              "line": 136,
              "content": "window.nameToKey[category] = {};"
            },
            {
              "file": "polygons.js",
              "line": 141,
              "content": "window.nameToKey[category][display] = k;"
            },
            {
              "file": "polygons.js",
              "line": 148,
              "content": "const key = window.nameToKey[category][displayName];"
            },
            {
              "file": "polygons.js",
              "line": 258,
              "content": "const key = window.nameToKey[category][n];"
            },
            {
              "file": "LegacyIntegrationBridge.js",
              "line": 249,
              "content": "window.nameToKey = window.nameToKey || {};"
            },
            {
              "file": "LegacyIntegrationBridge.js",
              "line": 296,
              "content": "window.nameToKey = nameToKey;"
            },
            {
              "file": "SearchManager.js",
              "line": 151,
              "content": "const nameToKey = window.nameToKey || {};"
            },
            {
              "file": "SearchManager.js",
              "line": 316,
              "content": "const nameToKey = window.nameToKey || {};"
            },
            {
              "file": "state.js",
              "line": 19,
              "content": "window.nameToKey = { ses:{}, lga:{}, cfa:{}, ambulance:{}, police:{}, frv:{} };"
            },
            {
              "file": "data-flow.md",
              "line": 54,
              "content": "window.nameToKey = {"
            },
            {
              "file": "data-flow.md",
              "line": 157,
              "content": "window.nameToKey.ses[feature.name] = feature.key;"
            },
            {
              "file": "data-flow.md",
              "line": 292,
              "content": "window.nameToKey.ses[name] = key;"
            },
            {
              "file": "data-flow.md",
              "line": 419,
              "content": "if (!window.nameToKey[category][key]) {"
            },
            {
              "file": "data-flow.md",
              "line": 430,
              "content": "if (!window.nameToKey[category][name]) {"
            },
            {
              "file": "data-flow.md",
              "line": 791,
              "content": "if (!window.nameToKey[category][key]) {"
            },
            {
              "file": "data-flow.md",
              "line": 800,
              "content": "if (!window.nameToKey[category][name]) {"
            },
            {
              "file": "data-flow.md",
              "line": 1078,
              "content": "const nameKeys = Object.keys(window.nameToKey[category] || {});"
            },
            {
              "file": "data-loading.md",
              "line": 511,
              "content": "window.nameToKey[category] = {};"
            },
            {
              "file": "data-loading.md",
              "line": 515,
              "content": "window.nameToKey[category][name] = key;"
            },
            {
              "file": "migration-progress.md",
              "line": 29,
              "content": "- `window.nameToKey`: 45 usages"
            },
            {
              "file": "migration-progress.md",
              "line": 77,
              "content": "2. `window.nameToKey` (45 usages) \u001a `StateManager` state"
            },
            {
              "file": "setup.md",
              "line": 24,
              "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 14,
              "content": "window.nameToKey         \u001a stateManager.get('nameToKey')"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 124,
              "content": "3. `window.nameToKey` \u001a `stateManager.get('nameToKey')`"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 22,
              "content": "| `window.nameToKey` | Name-to-key mapping | `stateManager.get('nameToKey')` | Direct state migration |"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 90,
              "content": "'window.nameToKey': 'stateManager.get(\"nameToKey\")',"
            },
            {
              "file": "README.md",
              "line": 109,
              "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 30,
              "content": "'window.nameToKey',"
            },
            {
              "file": "activeList.real.test.js",
              "line": 110,
              "content": "global.nameToKey = window.nameToKey;"
            },
            {
              "file": "activeList.real.test.js",
              "line": 123,
              "content": "window.nameToKey = { ses: {}, lga: {}, cfa: {}, ambulance: {}, police: {}, frv: {} };"
            },
            {
              "file": "activeList.real.test.js",
              "line": 140,
              "content": "global.nameToKey = window.nameToKey;"
            },
            {
              "file": "activeList.real.test.js",
              "line": 240,
              "content": "window.nameToKey.ses = { 'Ballarat City': 'ballarat_city', 'Geelong': 'geelong' };"
            },
            {
              "file": "activeList.real.test.js",
              "line": 270,
              "content": "window.nameToKey.ses = { 'Ballarat City': 'ballarat_city' };"
            },
            {
              "file": "activeList.real.test.js",
              "line": 371,
              "content": "window.nameToKey.ses = { 'Ballarat City': 'ballarat_city' };"
            },
            {
              "file": "activeList.real.test.js",
              "line": 406,
              "content": "window.nameToKey.ses = { 'Ballarat City': 'ballarat_city' };"
            },
            {
              "file": "map-integration.real.test.js",
              "line": 84,
              "content": "window.nameToKey = { ses: {}, lga: {}, cfa: {} };"
            },
            {
              "file": "map-integration.test.js",
              "line": 147,
              "content": "window.nameToKey = {"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 27,
              "content": "| `window.nameToKey` | `stateManager.get('nameToKey')` | Direct state migration | **CRITICAL** |"
            }
          ]
        }
      ],
      [
        "window.namesByCategory",
        {
          "count": 66,
          "locations": [
            {
              "file": "ActiveListManager.js.html",
              "line": 2997,
              "content": "if (!window.namesByCategory?.[category] || !window.nameToKey?.[category]) {"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3007,
              "content": "window.namesByCategory[category].forEach(name =&gt; {"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3238,
              "content": "if (!window.namesByCategory?.[category] || !window.featureLayers?.[category]) {"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3245,
              "content": "window.namesByCategory[category].forEach(name =&gt; {"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3919,
              "content": "<span class=\"missing-if-branch\" title=\"if path not taken\" >I</span>if (!window.namesByCategory?.[category]) <span class=\"cstat-no\" title=\"statement not covered\" >return;</span>"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3977,
              "content": "if (!window.namesByCategory?.[category]) return;"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3979,
              "content": "window.namesByCategory[category].forEach(name =&gt; {"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1669,
              "content": "if (window.namesByCategory &amp;&amp; window.nameToKey) {"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1693,
              "content": "if (!window.namesByCategory || !window.nameToKey) {"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1698,
              "content": "Object.entries(window.namesByCategory).forEach(([category, names]) =&gt; {"
            },
            {
              "file": "LegacyIntegrationBridge.js.html",
              "line": 1193,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.namesByCategory = window.namesByCategory || {};</span>"
            },
            {
              "file": "LegacyIntegrationBridge.js.html",
              "line": 1235,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.namesByCategory = namesByCategory;</span>"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1005,
              "content": "const namesByCategory = <span class=\"cstat-no\" title=\"statement not covered\" >window.namesByCategory || {};</span>"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1170,
              "content": "const namesByCategory = <span class=\"cstat-no\" title=\"statement not covered\" >window.namesByCategory || {};</span>"
            },
            {
              "file": "ActiveListManager.js",
              "line": 286,
              "content": "if (!window.namesByCategory?.[category] || !window.nameToKey?.[category]) {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 296,
              "content": "window.namesByCategory[category].forEach(name => {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 527,
              "content": "if (!window.namesByCategory?.[category] || !window.featureLayers?.[category]) {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 534,
              "content": "window.namesByCategory[category].forEach(name => {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 1208,
              "content": "if (!window.namesByCategory?.[category]) return;"
            },
            {
              "file": "ActiveListManager.js",
              "line": 1266,
              "content": "if (!window.namesByCategory?.[category]) return;"
            },
            {
              "file": "ActiveListManager.js",
              "line": 1268,
              "content": "window.namesByCategory[category].forEach(name => {"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 191,
              "content": "delete window.namesByCategory;"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 751,
              "content": "delete window.namesByCategory;"
            },
            {
              "file": "SearchManager.js",
              "line": 212,
              "content": "if (window.namesByCategory && window.nameToKey) {"
            },
            {
              "file": "SearchManager.js",
              "line": 236,
              "content": "if (!window.namesByCategory || !window.nameToKey) {"
            },
            {
              "file": "SearchManager.js",
              "line": 241,
              "content": "Object.entries(window.namesByCategory).forEach(([category, names]) => {"
            },
            {
              "file": "SearchManager.test.js",
              "line": 161,
              "content": "delete window.namesByCategory;"
            },
            {
              "file": "SearchManager.test.js",
              "line": 535,
              "content": "delete window.namesByCategory;"
            },
            {
              "file": "polygons.js",
              "line": 127,
              "content": "window.namesByCategory[category] = Object.keys(window.featureLayers[category])"
            },
            {
              "file": "polygons.js",
              "line": 147,
              "content": "window.namesByCategory[category].forEach(displayName => {"
            },
            {
              "file": "polygons.js",
              "line": 228,
              "content": "const items = window.namesByCategory[category];"
            },
            {
              "file": "LegacyIntegrationBridge.js",
              "line": 248,
              "content": "window.namesByCategory = window.namesByCategory || {};"
            },
            {
              "file": "LegacyIntegrationBridge.js",
              "line": 290,
              "content": "window.namesByCategory = namesByCategory;"
            },
            {
              "file": "SearchManager.js",
              "line": 150,
              "content": "const namesByCategory = window.namesByCategory || {};"
            },
            {
              "file": "SearchManager.js",
              "line": 315,
              "content": "const namesByCategory = window.namesByCategory || {};"
            },
            {
              "file": "state.js",
              "line": 17,
              "content": "window.namesByCategory = { ses:[], lga:[], cfa:[], ambulance:[], police:[], frv:[] };"
            },
            {
              "file": "data-flow.md",
              "line": 46,
              "content": "window.namesByCategory = {"
            },
            {
              "file": "data-flow.md",
              "line": 156,
              "content": "window.namesByCategory.ses.push(feature.name);"
            },
            {
              "file": "data-flow.md",
              "line": 291,
              "content": "window.namesByCategory.ses.push(name);"
            },
            {
              "file": "data-flow.md",
              "line": 428,
              "content": "Object.entries(window.namesByCategory).forEach(([category, names]) => {"
            },
            {
              "file": "data-flow.md",
              "line": 433,
              "content": "const index = window.namesByCategory[category].indexOf(name);"
            },
            {
              "file": "data-flow.md",
              "line": 435,
              "content": "window.namesByCategory[category].splice(index, 1);"
            },
            {
              "file": "data-flow.md",
              "line": 768,
              "content": "namesByCategory: window.namesByCategory,"
            },
            {
              "file": "data-flow.md",
              "line": 776,
              "content": "names: window.namesByCategory.ses,"
            },
            {
              "file": "data-flow.md",
              "line": 798,
              "content": "Object.entries(window.namesByCategory).forEach(([category, names]) => {"
            },
            {
              "file": "data-flow.md",
              "line": 949,
              "content": "window.namesByCategory.ses.push(name); // Add name"
            },
            {
              "file": "data-loading.md",
              "line": 506,
              "content": "window.namesByCategory[category] = features.map(f =>"
            },
            {
              "file": "migration-progress.md",
              "line": 30,
              "content": "- `window.namesByCategory`: 42 usages"
            },
            {
              "file": "migration-progress.md",
              "line": 78,
              "content": "3. `window.namesByCategory` (42 usages) \u001a `StateManager` state"
            },
            {
              "file": "setup.md",
              "line": 24,
              "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 13,
              "content": "window.namesByCategory   \u001a stateManager.get('namesByCategory')"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 123,
              "content": "2. `window.namesByCategory` \u001a `stateManager.get('namesByCategory')`"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 21,
              "content": "| `window.namesByCategory` | Category name arrays | `stateManager.get('namesByCategory')` | Direct state migration |"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 89,
              "content": "'window.namesByCategory': 'stateManager.get(\"namesByCategory\")',"
            },
            {
              "file": "README.md",
              "line": 109,
              "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 29,
              "content": "'window.namesByCategory',"
            },
            {
              "file": "activeList.real.test.js",
              "line": 109,
              "content": "global.namesByCategory = window.namesByCategory;"
            },
            {
              "file": "activeList.real.test.js",
              "line": 122,
              "content": "window.namesByCategory = { ses: [], lga: [], cfa: [], ambulance: [], police: [], frv: [] };"
            },
            {
              "file": "activeList.real.test.js",
              "line": 139,
              "content": "global.namesByCategory = window.namesByCategory;"
            },
            {
              "file": "activeList.real.test.js",
              "line": 239,
              "content": "window.namesByCategory.ses = ['Ballarat City', 'Geelong'];"
            },
            {
              "file": "activeList.real.test.js",
              "line": 269,
              "content": "window.namesByCategory.ses = ['Ballarat City'];"
            },
            {
              "file": "activeList.real.test.js",
              "line": 370,
              "content": "window.namesByCategory.ses = ['Ballarat City'];"
            },
            {
              "file": "activeList.real.test.js",
              "line": 405,
              "content": "window.namesByCategory.ses = ['Ballarat City'];"
            },
            {
              "file": "map-integration.real.test.js",
              "line": 83,
              "content": "window.namesByCategory = { ses: [], lga: [], cfa: [] };"
            },
            {
              "file": "map-integration.test.js",
              "line": 144,
              "content": "window.namesByCategory = {"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 26,
              "content": "| `window.namesByCategory` | `stateManager.get('namesByCategory')` | Direct state migration | **CRITICAL** |"
            }
          ]
        }
      ],
      [
        "window.featureLayers",
        {
          "count": 63,
          "locations": [
            {
              "file": "ActiveListManager.js.html",
              "line": 3238,
              "content": "if (!window.namesByCategory?.[category] || !window.featureLayers?.[category]) {"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3321,
              "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (meta?.type === 'polygon' &amp;&amp; window.featureLayers?.[category]?.[key]) {"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3322,
              "content": "const layer = window.featureLayers[category][key][0];"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3587,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      layerOrMarker = window.featureLayers?.[category]?.[key];</span>"
            },
            {
              "file": "ActiveListManager.js.html",
              "line": 3589,
              "content": "layerOrMarker = window.featureLayers?.[category]?.[key]?.[0];"
            },
            {
              "file": "LegacyIntegrationBridge.js.html",
              "line": 1192,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.featureLayers = window.featureLayers || {};</span>"
            },
            {
              "file": "LegacyIntegrationBridge.js.html",
              "line": 1229,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >        window.featureLayers = featureLayers;</span>"
            },
            {
              "file": "ActiveListManager.js",
              "line": 527,
              "content": "if (!window.namesByCategory?.[category] || !window.featureLayers?.[category]) {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 610,
              "content": "if (meta?.type === 'polygon' && window.featureLayers?.[category]?.[key]) {"
            },
            {
              "file": "ActiveListManager.js",
              "line": 611,
              "content": "const layer = window.featureLayers[category][key][0];"
            },
            {
              "file": "ActiveListManager.js",
              "line": 876,
              "content": "layerOrMarker = window.featureLayers?.[category]?.[key];"
            },
            {
              "file": "ActiveListManager.js",
              "line": 878,
              "content": "layerOrMarker = window.featureLayers?.[category]?.[key]?.[0];"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 196,
              "content": "delete window.featureLayers;"
            },
            {
              "file": "polygons.js",
              "line": 86,
              "content": "if (window.featureLayers[category][key]) {"
            },
            {
              "file": "polygons.js",
              "line": 87,
              "content": "window.featureLayers[category][key].push(feature);"
            },
            {
              "file": "polygons.js",
              "line": 89,
              "content": "window.featureLayers[category][key] = [feature];"
            },
            {
              "file": "polygons.js",
              "line": 111,
              "content": "Object.keys(window.featureLayers[category]).forEach(key => {"
            },
            {
              "file": "polygons.js",
              "line": 112,
              "content": "window.featureLayers[category][key] = window.featureLayers[category][key].map(feature => {"
            },
            {
              "file": "polygons.js",
              "line": 127,
              "content": "window.namesByCategory[category] = Object.keys(window.featureLayers[category])"
            },
            {
              "file": "polygons.js",
              "line": 137,
              "content": "Object.keys(window.featureLayers[category]).forEach(k => {"
            },
            {
              "file": "polygons.js",
              "line": 159,
              "content": "window.featureLayers[category][key].forEach(l => {"
            },
            {
              "file": "polygons.js",
              "line": 194,
              "content": "window.featureLayers[category][key].forEach(l => {"
            },
            {
              "file": "polygons.js",
              "line": 278,
              "content": "window.featureLayers[category][key].forEach(l => {"
            },
            {
              "file": "LegacyIntegrationBridge.js",
              "line": 247,
              "content": "window.featureLayers = window.featureLayers || {};"
            },
            {
              "file": "LegacyIntegrationBridge.js",
              "line": 284,
              "content": "window.featureLayers = featureLayers;"
            },
            {
              "file": "state.js",
              "line": 15,
              "content": "window.featureLayers = { ses:{}, lga:{}, cfa:{}, ambulance:{}, police:{}, frv:{} };"
            },
            {
              "file": "state.js",
              "line": 199,
              "content": "if (window.featureLayers[category][key] &&"
            },
            {
              "file": "state.js",
              "line": 200,
              "content": "window.featureLayers[category][key].some(l => l._map)) {"
            },
            {
              "file": "data-flow.md",
              "line": 32,
              "content": "window.featureLayers = {"
            },
            {
              "file": "data-flow.md",
              "line": 155,
              "content": "window.featureLayers.ses[feature.key] = feature.layer;"
            },
            {
              "file": "data-flow.md",
              "line": 290,
              "content": "window.featureLayers.ses[key] = createLeafletLayer(feature);"
            },
            {
              "file": "data-flow.md",
              "line": 417,
              "content": "Object.entries(window.featureLayers).forEach(([category, layers]) => {"
            },
            {
              "file": "data-flow.md",
              "line": 422,
              "content": "delete window.featureLayers[category][key];"
            },
            {
              "file": "data-flow.md",
              "line": 614,
              "content": "if (!window.featureLayers[category][key]) {"
            },
            {
              "file": "data-flow.md",
              "line": 654,
              "content": "Object.entries(window.featureLayers).forEach(([category, layers]) => {"
            },
            {
              "file": "data-flow.md",
              "line": 767,
              "content": "featureLayers: window.featureLayers,"
            },
            {
              "file": "data-flow.md",
              "line": 775,
              "content": "layers: Object.keys(window.featureLayers.ses),"
            },
            {
              "file": "data-flow.md",
              "line": 789,
              "content": "Object.entries(window.featureLayers).forEach(([category, layers]) => {"
            },
            {
              "file": "data-flow.md",
              "line": 947,
              "content": "window.featureLayers.ses[key] = layer; // Add layer"
            },
            {
              "file": "data-flow.md",
              "line": 976,
              "content": "console.log(window.featureLayers);"
            },
            {
              "file": "data-flow.md",
              "line": 1076,
              "content": "Object.entries(window.featureLayers).forEach(([category, layers]) => {"
            },
            {
              "file": "data-flow.md",
              "line": 1096,
              "content": "const layerKeys = Object.keys(window.featureLayers[category] || {});"
            },
            {
              "file": "data-loading.md",
              "line": 495,
              "content": "window.featureLayers[category].push(layer);"
            },
            {
              "file": "data-loading.md",
              "line": 523,
              "content": "if (!window.featureLayers[category]) {"
            },
            {
              "file": "data-loading.md",
              "line": 524,
              "content": "window.featureLayers[category] = [];"
            },
            {
              "file": "data-loading.md",
              "line": 528,
              "content": "window.featureLayers[category].push(...layers);"
            },
            {
              "file": "migration-progress.md",
              "line": 28,
              "content": "- `window.featureLayers`: 57 usages"
            },
            {
              "file": "migration-progress.md",
              "line": 76,
              "content": "1. `window.featureLayers` (57 usages) \u001a `LayerManager` state"
            },
            {
              "file": "setup.md",
              "line": 24,
              "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 12,
              "content": "window.featureLayers     \u001a stateManager.get('featureLayers')"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 122,
              "content": "1. `window.featureLayers` \u001a `stateManager.get('featureLayers')`"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 20,
              "content": "| `window.featureLayers` | Map layers by category | `stateManager.get('featureLayers')` | Direct state migration |"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 88,
              "content": "'window.featureLayers': 'stateManager.get(\"featureLayers\")',"
            },
            {
              "file": "README.md",
              "line": 109,
              "content": "- **Core Data Management**: `window.featureLayers`, `window.namesByCategory`, `window.nameToKey`"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 28,
              "content": "'window.featureLayers',"
            },
            {
              "file": "activeList.real.test.js",
              "line": 111,
              "content": "global.featureLayers = window.featureLayers;"
            },
            {
              "file": "activeList.real.test.js",
              "line": 124,
              "content": "window.featureLayers = { ses: {}, lga: {}, cfa: {}, ambulance: {}, police: {}, frv: {} };"
            },
            {
              "file": "activeList.real.test.js",
              "line": 141,
              "content": "global.featureLayers = window.featureLayers;"
            },
            {
              "file": "activeList.real.test.js",
              "line": 372,
              "content": "window.featureLayers.ses = { ballarat_city: [mockLayer] };"
            },
            {
              "file": "map-integration.real.test.js",
              "line": 82,
              "content": "window.featureLayers = { ses: {}, lga: {}, cfa: {} };"
            },
            {
              "file": "map-integration.test.js",
              "line": 141,
              "content": "window.featureLayers = {"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 25,
              "content": "| `window.featureLayers` | `stateManager.get('featureLayers')` | Direct state migration | **CRITICAL** |"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 236,
              "content": "- Mixed legacy `window.featureLayers` with modern state patterns"
            }
          ]
        }
      ],
      [
        "window.emphasised",
        {
          "count": 33,
          "locations": [
            {
              "file": "ActiveListManager.js.html",
              "line": 3436,
              "content": "checkbox.checked = !!(window.emphasised?.[category]?.[key]);"
            },
            {
              "file": "LegacyIntegrationBridge.js.html",
              "line": 1195,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.emphasised = window.emphasised || {};</span>"
            },
            {
              "file": "ActiveListManager.js",
              "line": 725,
              "content": "checkbox.checked = !!(window.emphasised?.[category]?.[key]);"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 197,
              "content": "delete window.emphasised;"
            },
            {
              "file": "bootstrap.js",
              "line": 905,
              "content": "try { window.emphasised[cat][key] = false; } catch {}"
            },
            {
              "file": "bootstrap.js",
              "line": 967,
              "content": "try { window.emphasised[cat][key] = false; } catch {}"
            },
            {
              "file": "polygons.js",
              "line": 180,
              "content": "window.emphasised[category][key] = false;"
            },
            {
              "file": "polygons.js",
              "line": 298,
              "content": "if (window.emphasised?.[category]) {"
            },
            {
              "file": "polygons.js",
              "line": 299,
              "content": "window.emphasised[category][key] = false;"
            },
            {
              "file": "LegacyIntegrationBridge.js",
              "line": 250,
              "content": "window.emphasised = window.emphasised || {};"
            },
            {
              "file": "bootstrap.js",
              "line": 1176,
              "content": "try { window.emphasised[cat][key] = false; } catch {}"
            },
            {
              "file": "bootstrap.js",
              "line": 1240,
              "content": "try { window.emphasised[cat][key] = false; } catch {}"
            },
            {
              "file": "state.js",
              "line": 21,
              "content": "window.emphasised = { ses:{}, lga:{}, cfa:{}, ambulance:{}, police:{}, frv:{} };"
            },
            {
              "file": "data-flow.md",
              "line": 65,
              "content": "window.emphasised = {"
            },
            {
              "file": "data-flow.md",
              "line": 252,
              "content": "window.emphasised[category][key] = true;"
            },
            {
              "file": "data-flow.md",
              "line": 255,
              "content": "window.emphasised[category][key] = false;"
            },
            {
              "file": "data-flow.md",
              "line": 675,
              "content": "emphasised: window.emphasised,"
            },
            {
              "file": "data-flow.md",
              "line": 702,
              "content": "window.emphasised = { ...window.emphasised, ...state.emphasised };"
            },
            {
              "file": "data-flow.md",
              "line": 769,
              "content": "emphasised: window.emphasised,"
            },
            {
              "file": "data-flow.md",
              "line": 777,
              "content": "emphasised: window.emphasised.ses,"
            },
            {
              "file": "data-flow.md",
              "line": 948,
              "content": "window.emphasised.ses[key] = true; // Emphasize feature"
            },
            {
              "file": "data-flow.md",
              "line": 977,
              "content": "console.log(window.emphasised);"
            },
            {
              "file": "data-flow.md",
              "line": 1094,
              "content": "Object.entries(window.emphasised).forEach(([category, emphasis]) => {"
            },
            {
              "file": "migration-progress.md",
              "line": 79,
              "content": "4. `window.emphasised` (24 usages) \u001a `StateManager` state"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 15,
              "content": "window.emphasised        \u001a stateManager.get('emphasised')"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 125,
              "content": "4. `window.emphasised` \u001a `stateManager.get('emphasised')`"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 23,
              "content": "| `window.emphasised` | Emphasis state tracking | `stateManager.get('emphasised')` | Direct state migration |"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 91,
              "content": "'window.emphasised': 'stateManager.get(\"emphasised\")',"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 31,
              "content": "'window.emphasised',"
            },
            {
              "file": "activeList.real.test.js",
              "line": 114,
              "content": "global.emphasised = window.emphasised;"
            },
            {
              "file": "activeList.real.test.js",
              "line": 125,
              "content": "window.emphasised = { ses: {}, lga: {}, cfa: {}, ambulance: {}, police: {}, frv: {} };"
            },
            {
              "file": "activeList.real.test.js",
              "line": 144,
              "content": "global.emphasised = window.emphasised;"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 28,
              "content": "| `window.emphasised` | `stateManager.get('emphasised')` | Direct state migration | **CRITICAL** |"
            }
          ]
        }
      ],
      [
        "window.outlineColors",
        {
          "count": 33,
          "locations": [
            {
              "file": "ActiveListManager.js.html",
              "line": 3396,
              "content": "const baseColor = window.outlineColors?.[category] || <span class=\"branch-1 cbranch-no\" title=\"branch not covered\" >'#333';</span>"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1886,
              "content": "<span class=\"missing-if-branch\" title=\"else path not taken\" >E</span>if (window.outlineColors &amp;&amp; window.outlineColors[category]) {"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1887,
              "content": "const base = window.outlineColors[category];"
            },
            {
              "file": "LegacyIntegrationBridge.js.html",
              "line": 1201,
              "content": "<span class=\"cstat-no\" title=\"statement not covered\" >      window.outlineColors = window.outlineColors || {};</span>"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1007,
              "content": "const outlineColors = <span class=\"cstat-no\" title=\"statement not covered\" >window.outlineColors || {};</span>"
            },
            {
              "file": "SearchManager.js.html",
              "line": 1064,
              "content": "const outlineColors = <span class=\"cstat-no\" title=\"statement not covered\" >window.outlineColors || {};</span>"
            },
            {
              "file": "ActiveListManager.js",
              "line": 685,
              "content": "const baseColor = window.outlineColors?.[category] || '#333';"
            },
            {
              "file": "ActiveListManager.test.js",
              "line": 194,
              "content": "delete window.outlineColors;"
            },
            {
              "file": "SearchManager.js",
              "line": 429,
              "content": "if (window.outlineColors && window.outlineColors[category]) {"
            },
            {
              "file": "SearchManager.js",
              "line": 430,
              "content": "const base = window.outlineColors[category];"
            },
            {
              "file": "SearchManager.test.js",
              "line": 163,
              "content": "delete window.outlineColors;"
            },
            {
              "file": "bootstrap.js",
              "line": 718,
              "content": "window.outlineColors[cat] = style.color;"
            },
            {
              "file": "bootstrap.js",
              "line": 739,
              "content": "const base = window.outlineColors[cat];"
            },
            {
              "file": "polygons.js",
              "line": 8,
              "content": "const color = window.outlineColors.ses || '#FF9900';"
            },
            {
              "file": "polygons_old.js",
              "line": 8,
              "content": "const color = window.outlineColors.ses || '#FF9900';"
            },
            {
              "file": "LegacyIntegrationBridge.js",
              "line": 256,
              "content": "window.outlineColors = window.outlineColors || {};"
            },
            {
              "file": "SearchManager.js",
              "line": 152,
              "content": "const outlineColors = window.outlineColors || {};"
            },
            {
              "file": "SearchManager.js",
              "line": 209,
              "content": "const outlineColors = window.outlineColors || {};"
            },
            {
              "file": "bootstrap.js",
              "line": 945,
              "content": "window.outlineColors[cat] = style.color;"
            },
            {
              "file": "bootstrap.js",
              "line": 966,
              "content": "const base = window.outlineColors[cat];"
            },
            {
              "file": "config.js",
              "line": 18,
              "content": "window.outlineColors = { ses:'#cc7a00', lga:'black', cfa:'#FF0000', ambulance:'#d32f2f', police:'#145088', frv:'#DC143C' };"
            },
            {
              "file": "endpoints.md",
              "line": 185,
              "content": "window.outlineColors = {"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 26,
              "content": "window.outlineColors       \u001a configurationManager.get('outlineColors')"
            },
            {
              "file": "variable-migration-quick-reference.md",
              "line": 129,
              "content": "2. `window.outlineColors` \u001a `configurationManager.get('outlineColors')`"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 33,
              "content": "| `window.outlineColors` | Category outline colors | `configurationManager.get('outlineColors')` | Configuration migration |"
            },
            {
              "file": "variable-naming-strategy.md",
              "line": 99,
              "content": "'window.outlineColors': 'configurationManager.get(\"outlineColors\")',"
            },
            {
              "file": "analyze-legacy-usage.js",
              "line": 36,
              "content": "'window.outlineColors',"
            },
            {
              "file": "activeList.real.test.js",
              "line": 113,
              "content": "global.outlineColors = window.outlineColors;"
            },
            {
              "file": "activeList.real.test.js",
              "line": 133,
              "content": "window.outlineColors = { ses: '#FF9900', lga: '#4ECDC4', cfa: '#45B7D1' };"
            },
            {
              "file": "activeList.real.test.js",
              "line": 143,
              "content": "global.outlineColors = window.outlineColors;"
            },
            {
              "file": "map-integration.real.test.js",
              "line": 87,
              "content": "window.outlineColors = { ses: '#FF9900' };"
            },
            {
              "file": "map-integration.real.test.js",
              "line": 95,
              "content": "const color = window.outlineColors.ses || '#FF9900';"
            },
            {
              "file": "legacy_code_inventory.md",
              "line": 38,
              "content": "| `window.outlineColors` | `configurationManager.get('outlineColors')` | Configuration migration | **HIGH** |"
            }
          ]
        }
      ]
    ],
    "filesWithMostUsage": [
      [
        "data-flow.md",
        {
          "legacyFunctions": 0,
          "legacyGlobals": 57,
          "totalUsage": 57,
          "functions": [],
          "globals": [
            "window.featureLayers",
            "window.namesByCategory",
            "window.nameToKey",
            "window.emphasised",
            "window.nameLabelMarkers",
            "window.activeListFilter",
            "window.isBulkOperation",
            "window.pendingLabels"
          ]
        }
      ],
      [
        "bootstrap.js",
        {
          "legacyFunctions": 33,
          "legacyGlobals": 16,
          "totalUsage": 49,
          "functions": [
            "window.updateActiveList",
            "window.beginActiveListBulk",
            "window.endActiveListBulk",
            "window.setupCollapsible",
            "window.removeLabel"
          ],
          "globals": [
            "window.emphasised",
            "window.nameLabelMarkers",
            "window.outlineColors",
            "window.headerColorAdjust",
            "window.categoryMeta"
          ]
        }
      ],
      [
        "polygons.js",
        {
          "legacyFunctions": 11,
          "legacyGlobals": 34,
          "totalUsage": 45,
          "functions": [
            "window.updateActiveList",
            "window.beginActiveListBulk",
            "window.endActiveListBulk",
            "window.createCheckbox",
            "window.ensureLabel",
            "window.BulkOperationManager"
          ],
          "globals": [
            "window.featureLayers",
            "window.namesByCategory",
            "window.nameToKey",
            "window.emphasised",
            "window.nameLabelMarkers",
            "window.isBulkOperation",
            "window.pendingLabels",
            "window.outlineColors",
            "window.categoryMeta"
          ]
        }
      ],
      [
        "ActiveListManager.js.html",
        {
          "legacyFunctions": 17,
          "legacyGlobals": 25,
          "totalUsage": 42,
          "functions": [
            "window.updateActiveList",
            "window.beginActiveListBulk",
            "window.endActiveListBulk",
            "window.setEmphasis",
            "window.ensureLabel",
            "window.removeLabel"
          ],
          "globals": [
            "window.featureLayers",
            "window.namesByCategory",
            "window.nameToKey",
            "window.emphasised",
            "window.outlineColors",
            "window.labelColorAdjust",
            "window.categoryMeta"
          ]
        }
      ],
      [
        "ActiveListManager.js",
        {
          "legacyFunctions": 17,
          "legacyGlobals": 25,
          "totalUsage": 42,
          "functions": [
            "window.updateActiveList",
            "window.beginActiveListBulk",
            "window.endActiveListBulk",
            "window.setEmphasis",
            "window.ensureLabel",
            "window.removeLabel"
          ],
          "globals": [
            "window.featureLayers",
            "window.namesByCategory",
            "window.nameToKey",
            "window.emphasised",
            "window.outlineColors",
            "window.labelColorAdjust",
            "window.categoryMeta"
          ]
        }
      ],
      [
        "variable-naming-strategy.md",
        {
          "legacyFunctions": 11,
          "legacyGlobals": 26,
          "totalUsage": 37,
          "functions": [
            "window.updateActiveList",
            "window.beginActiveListBulk",
            "window.endActiveListBulk",
            "window.createCheckbox",
            "window.setupCollapsible",
            "window.setEmphasis",
            "window.ensureLabel",
            "window.removeLabel",
            "window.toggleAll",
            "window.BulkOperationManager"
          ],
          "globals": [
            "window.featureLayers",
            "window.namesByCategory",
            "window.nameToKey",
            "window.emphasised",
            "window.nameLabelMarkers",
            "window.activeListFilter",
            "window.isBulkOperation",
            "window.pendingLabels",
            "window.outlineColors",
            "window.baseOpacities",
            "window.labelColorAdjust",
            "window.headerColorAdjust",
            "window.categoryMeta"
          ]
        }
      ],
      [
        "variable-migration-quick-reference.md",
        {
          "legacyFunctions": 13,
          "legacyGlobals": 20,
          "totalUsage": 33,
          "functions": [
            "window.updateActiveList",
            "window.beginActiveListBulk",
            "window.endActiveListBulk",
            "window.createCheckbox",
            "window.setupCollapsible",
            "window.setEmphasis",
            "window.ensureLabel",
            "window.removeLabel",
            "window.toggleAll",
            "window.BulkOperationManager"
          ],
          "globals": [
            "window.featureLayers",
            "window.namesByCategory",
            "window.nameToKey",
            "window.emphasised",
            "window.nameLabelMarkers",
            "window.activeListFilter",
            "window.isBulkOperation",
            "window.pendingLabels",
            "window.outlineColors",
            "window.baseOpacities",
            "window.labelColorAdjust",
            "window.headerColorAdjust",
            "window.categoryMeta"
          ]
        }
      ],
      [
        "activeList.real.test.js",
        {
          "legacyFunctions": 3,
          "legacyGlobals": 30,
          "totalUsage": 33,
          "functions": [
            "window.setEmphasis",
            "window.ensureLabel",
            "window.removeLabel"
          ],
          "globals": [
            "window.featureLayers",
            "window.namesByCategory",
            "window.nameToKey",
            "window.emphasised",
            "window.outlineColors",
            "window.labelColorAdjust",
            "window.categoryMeta"
          ]
        }
      ],
      [
        "legacy_code_inventory.md",
        {
          "legacyFunctions": 14,
          "legacyGlobals": 14,
          "totalUsage": 28,
          "functions": [
            "window.updateActiveList",
            "window.beginActiveListBulk",
            "window.endActiveListBulk",
            "window.createCheckbox",
            "window.setupCollapsible",
            "window.setEmphasis",
            "window.ensureLabel",
            "window.removeLabel",
            "window.toggleAll",
            "window.BulkOperationManager"
          ],
          "globals": [
            "window.featureLayers",
            "window.namesByCategory",
            "window.nameToKey",
            "window.emphasised",
            "window.nameLabelMarkers",
            "window.activeListFilter",
            "window.isBulkOperation",
            "window.pendingLabels",
            "window.outlineColors",
            "window.baseOpacities",
            "window.labelColorAdjust",
            "window.headerColorAdjust",
            "window.categoryMeta"
          ]
        }
      ],
      [
        "ActiveListManager.test.js",
        {
          "legacyFunctions": 15,
          "legacyGlobals": 9,
          "totalUsage": 24,
          "functions": [
            "window.updateActiveList",
            "window.beginActiveListBulk",
            "window.endActiveListBulk",
            "window.setEmphasis",
            "window.ensureLabel",
            "window.removeLabel"
          ],
          "globals": [
            "window.featureLayers",
            "window.namesByCategory",
            "window.nameToKey",
            "window.emphasised",
            "window.outlineColors",
            "window.labelColorAdjust",
            "window.categoryMeta"
          ]
        }
      ]
    ],
    "analysisDate": "2025-09-03T10:03:30.104Z"
  }
}